{
  "address": "0x7bbA48808B4278cD3f75eee8b624C5396cAeBBDb",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "NewImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldProposalThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newProposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "ProposalThresholdSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "VotingDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "VotingPeriodSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expiration",
          "type": "uint256"
        }
      ],
      "name": "WhitelistAccountExpirationSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldGuardian",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGuardian",
          "type": "address"
        }
      ],
      "name": "WhitelistGuardianSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_PROPOSAL_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_VOTING_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_VOTING_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_PROPOSAL_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VOTING_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VOTING_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_acceptAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "governorAlpha",
          "type": "address"
        }
      ],
      "name": "_initiate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "_setPendingAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newProposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "_setProposalThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "_setVotingDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "_setVotingPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiration",
          "type": "uint256"
        }
      ],
      "name": "_setWhitelistAccountExpiration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "_setWhitelistGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "castVoteWithReason",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "comp",
      "outputs": [
        {
          "internalType": "contract CompInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ],
          "internalType": "struct GovernorBravoDelegateStorageV1.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialProposalId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "timelock_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "comp_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "votingPeriod_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votingDelay_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "proposalThreshold_",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalMaxOperations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "abstainVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum GovernorBravoDelegateStorageV1.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract TimelockInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistAccountExpirations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistGuardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xe7ca37575b3cba70b39a937e8e7603c4ae1e358ce291a626d13da44031149feb",
  "receipt": {
    "to": null,
    "from": "0x7d9A524ed19Bd7649BcC88045a8f03D3B45066E0",
    "contractAddress": "0x7bbA48808B4278cD3f75eee8b624C5396cAeBBDb",
    "transactionIndex": 0,
    "gasUsed": "3616895",
    "logsBloom": "0x
    "blockHash": "0x2c81f7688744e5c94ec2e53ce97fccf9e6a1c21aaa710200d7751af684c79a71",
    "transactionHash": "0xe7ca37575b3cba70b39a937e8e7603c4ae1e358ce291a626d13da44031149feb",
    "logs": [],
    "blockNumber": 15771448,
    "cumulativeGasUsed": "3616895",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "bde72212ff9cf6e188075c4bc58f8382",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldProposalThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"name\":\"WhitelistAccountExpirationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldGuardian\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"}],\"name\":\"WhitelistGuardianSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_VOTING_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTING_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_acceptAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"governorAlpha\",\"type\":\"address\"}],\"name\":\"_initiate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setPendingAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"_setProposalThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"_setVotingDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"_setVotingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"name\":\"_setWhitelistAccountExpiration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"_setWhitelistGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comp\",\"outputs\":[{\"internalType\":\"contract CompInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"internalType\":\"struct GovernorBravoDelegateStorageV1.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"timelock_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"comp_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingDelay_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalThreshold_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalMaxOperations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum GovernorBravoDelegateStorageV1.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract TimelockInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistAccountExpirations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelistGuardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"_acceptAdmin()\":{\"details\":\"Admin function for pending admin to accept role and update admin\"},\"_initiate(address)\":{\"details\":\"Admin only. Sets initial proposal id which initiates the contract, ensuring a continuous proposal id count\",\"params\":{\"governorAlpha\":\"The address for the Governor to continue the proposal id count from\"}},\"_setPendingAdmin(address)\":{\"details\":\"Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\",\"params\":{\"newPendingAdmin\":\"New pending admin.\"}},\"_setProposalThreshold(uint256)\":{\"details\":\"newProposalThreshold must be greater than the hardcoded min\",\"params\":{\"newProposalThreshold\":\"new proposal threshold\"}},\"_setVotingDelay(uint256)\":{\"params\":{\"newVotingDelay\":\"new voting delay, in blocks\"}},\"_setVotingPeriod(uint256)\":{\"params\":{\"newVotingPeriod\":\"new voting period, in blocks\"}},\"_setWhitelistAccountExpiration(address,uint256)\":{\"params\":{\"account\":\"Account address to set whitelist expiration for\",\"expiration\":\"Expiration for account whitelist status as timestamp (if now < expiration, whitelisted)\"}},\"_setWhitelistGuardian(address)\":{\"params\":{\"account\":\"Account to set whitelistGuardian to (0x0 to remove whitelistGuardian)\"}},\"cancel(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to cancel\"}},\"castVote(uint256,uint8)\":{\"params\":{\"proposalId\":\"The id of the proposal to vote on\",\"support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"External function that accepts EIP-712 signatures for voting on proposals.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"params\":{\"proposalId\":\"The id of the proposal to vote on\",\"reason\":\"The reason given for the vote by the voter\",\"support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"execute(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to execute\"}},\"getActions(uint256)\":{\"params\":{\"proposalId\":\"the id of the proposal\"},\"returns\":{\"calldatas\":\"of the proposal actions\",\"signatures\":\"of the proposal actions\",\"targets\":\"of the proposal actions\",\"values\":\"of the proposal actions\"}},\"getReceipt(uint256,address)\":{\"params\":{\"proposalId\":\"the id of proposal\",\"voter\":\"The address of the voter\"},\"returns\":{\"_0\":\"The voting receipt\"}},\"initialize(address,address,uint256,uint256,uint256)\":{\"params\":{\"comp_\":\"The address of the COMP token\",\"proposalThreshold_\":\"The initial proposal threshold\",\"timelock_\":\"The address of the Timelock\",\"votingDelay_\":\"The initial voting delay\",\"votingPeriod_\":\"The initial voting period\"}},\"isWhitelisted(address)\":{\"params\":{\"account\":\"Account to check white list status of\"},\"returns\":{\"_0\":\"If the account is whitelisted\"}},\"propose(address[],uint256[],string[],bytes[],string)\":{\"params\":{\"calldatas\":\"Calldatas for proposal calls\",\"description\":\"String description of the proposal\",\"signatures\":\"Function signatures for proposal calls\",\"targets\":\"Target addresses for proposal calls\",\"values\":\"Eth values for proposal calls\"},\"returns\":{\"_0\":\"Proposal id of new proposal\"}},\"queue(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to queue\"}},\"state(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal\"},\"returns\":{\"_0\":\"Proposal state\"}}},\"version\":1},\"userdoc\":{\"events\":{\"NewAdmin(address,address)\":{\"notice\":\"Emitted when pendingAdmin is accepted, which means admin is updated\"},\"NewImplementation(address,address)\":{\"notice\":\"Emitted when implementation is changed\"},\"NewPendingAdmin(address,address)\":{\"notice\":\"Emitted when pendingAdmin is changed\"},\"ProposalCanceled(uint256)\":{\"notice\":\"An event emitted when a proposal has been canceled\"},\"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)\":{\"notice\":\"An event emitted when a new proposal is created\"},\"ProposalExecuted(uint256)\":{\"notice\":\"An event emitted when a proposal has been executed in the Timelock\"},\"ProposalQueued(uint256,uint256)\":{\"notice\":\"An event emitted when a proposal has been queued in the Timelock\"},\"ProposalThresholdSet(uint256,uint256)\":{\"notice\":\"Emitted when proposal threshold is set\"},\"VoteCast(address,uint256,uint8,uint256,string)\":{\"notice\":\"An event emitted when a vote has been cast on a proposal\"},\"VotingDelaySet(uint256,uint256)\":{\"notice\":\"An event emitted when the voting delay is set\"},\"VotingPeriodSet(uint256,uint256)\":{\"notice\":\"An event emitted when the voting period is set\"},\"WhitelistAccountExpirationSet(address,uint256)\":{\"notice\":\"Emitted when whitelist account expiration is set\"},\"WhitelistGuardianSet(address,address)\":{\"notice\":\"Emitted when the whitelistGuardian is set\"}},\"kind\":\"user\",\"methods\":{\"BALLOT_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the ballot struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"MAX_PROPOSAL_THRESHOLD()\":{\"notice\":\"The maximum setable proposal threshold\"},\"MAX_VOTING_DELAY()\":{\"notice\":\"The max setable voting delay\"},\"MAX_VOTING_PERIOD()\":{\"notice\":\"The max setable voting period\"},\"MIN_PROPOSAL_THRESHOLD()\":{\"notice\":\"The minimum setable proposal threshold\"},\"MIN_VOTING_DELAY()\":{\"notice\":\"The min setable voting delay\"},\"MIN_VOTING_PERIOD()\":{\"notice\":\"The minimum setable voting period\"},\"_acceptAdmin()\":{\"notice\":\"Accepts transfer of admin rights. msg.sender must be pendingAdmin\"},\"_initiate(address)\":{\"notice\":\"Initiate the GovernorBravo contract\"},\"_setPendingAdmin(address)\":{\"notice\":\"Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\"},\"_setProposalThreshold(uint256)\":{\"notice\":\"Admin function for setting the proposal threshold\"},\"_setVotingDelay(uint256)\":{\"notice\":\"Admin function for setting the voting delay\"},\"_setVotingPeriod(uint256)\":{\"notice\":\"Admin function for setting the voting period\"},\"_setWhitelistAccountExpiration(address,uint256)\":{\"notice\":\"Admin function for setting the whitelist expiration as a timestamp for an account. Whitelist status allows accounts to propose without meeting threshold\"},\"_setWhitelistGuardian(address)\":{\"notice\":\"Admin function for setting the whitelistGuardian. WhitelistGuardian can cancel proposals from whitelisted addresses\"},\"admin()\":{\"notice\":\"Administrator for this contract\"},\"cancel(uint256)\":{\"notice\":\"Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\"},\"castVote(uint256,uint8)\":{\"notice\":\"Cast a vote for a proposal\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"notice\":\"Cast a vote for a proposal by signature\"},\"castVoteWithReason(uint256,uint8,string)\":{\"notice\":\"Cast a vote for a proposal with a reason\"},\"comp()\":{\"notice\":\"The address of the Compound governance token\"},\"execute(uint256)\":{\"notice\":\"Executes a queued proposal if eta has passed\"},\"getActions(uint256)\":{\"notice\":\"Gets actions of a proposal\"},\"getReceipt(uint256,address)\":{\"notice\":\"Gets the receipt for a voter on a given proposal\"},\"implementation()\":{\"notice\":\"Active brains of Governor\"},\"initialProposalId()\":{\"notice\":\"Initial proposal id set at become\"},\"initialize(address,address,uint256,uint256,uint256)\":{\"notice\":\"Used to initialize the contract during delegator constructor\"},\"isWhitelisted(address)\":{\"notice\":\"View function which returns if an account is whitelisted\"},\"latestProposalIds(address)\":{\"notice\":\"The latest proposal for each proposer\"},\"name()\":{\"notice\":\"The name of this contract\"},\"pendingAdmin()\":{\"notice\":\"Pending administrator for this contract\"},\"proposalCount()\":{\"notice\":\"The total number of proposals\"},\"proposalMaxOperations()\":{\"notice\":\"The maximum number of actions that can be included in a proposal\"},\"proposalThreshold()\":{\"notice\":\"The number of votes required in order for a voter to become a proposer\"},\"proposals(uint256)\":{\"notice\":\"The official record of all proposals ever proposed\"},\"propose(address[],uint256[],string[],bytes[],string)\":{\"notice\":\"Function used to propose a new proposal. Sender must have delegates above the proposal threshold\"},\"queue(uint256)\":{\"notice\":\"Queues a proposal of state succeeded\"},\"quorumVotes()\":{\"notice\":\"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\"},\"state(uint256)\":{\"notice\":\"Gets the state of a proposal\"},\"timelock()\":{\"notice\":\"The address of the Compound Protocol Timelock\"},\"votingDelay()\":{\"notice\":\"The delay before voting on a proposal may take place, once proposed, in blocks\"},\"votingPeriod()\":{\"notice\":\"The duration of voting on a proposal, in blocks\"},\"whitelistAccountExpirations(address)\":{\"notice\":\"Stores the expiration of account whitelist status as a timestamp\"},\"whitelistGuardian()\":{\"notice\":\"Address which manages whitelisted proposals and whitelist accounts\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Governance/GovernorBravoDelegate.sol\":\"GovernorBravoDelegate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Governance/GovernorBravoDelegate.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity ^0.8.10;\\n\\nimport \\\"./GovernorBravoInterfaces.sol\\\";\\n\\ncontract GovernorBravoDelegate is GovernorBravoDelegateStorageV2, GovernorBravoEvents {\\n\\n    /// @notice The name of this contract\\n    string public constant name = \\\"Compound Governor Bravo\\\";\\n\\n    /// @notice The minimum setable proposal threshold\\n    uint public constant MIN_PROPOSAL_THRESHOLD = 1000e18; // 1,000 Comp\\n\\n    /// @notice The maximum setable proposal threshold\\n    uint public constant MAX_PROPOSAL_THRESHOLD = 100000e18; //100,000 Comp\\n\\n    /// @notice The minimum setable voting period\\n    uint public constant MIN_VOTING_PERIOD = 60; // About 24 hours\\n\\n    /// @notice The max setable voting period\\n    uint public constant MAX_VOTING_PERIOD = 1000; // About 2 weeks\\n\\n    /// @notice The min setable voting delay\\n    uint public constant MIN_VOTING_DELAY = 1;\\n\\n    /// @notice The max setable voting delay\\n    uint public constant MAX_VOTING_DELAY = 40320; // About 1 week\\n\\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n    uint public constant quorumVotes = 400000e18; // 400,000 = 4% of Comp\\n\\n    /// @notice The maximum number of actions that can be included in a proposal\\n    uint public constant proposalMaxOperations = 10; // 10 actions\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\");\\n\\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\\\"Ballot(uint256 proposalId,uint8 support)\\\");\\n\\n    /**\\n      * @notice Used to initialize the contract during delegator constructor\\n      * @param timelock_ The address of the Timelock\\n      * @param comp_ The address of the COMP token\\n      * @param votingPeriod_ The initial voting period\\n      * @param votingDelay_ The initial voting delay\\n      * @param proposalThreshold_ The initial proposal threshold\\n      */\\n    function initialize(address timelock_, address comp_, uint votingPeriod_, uint votingDelay_, uint proposalThreshold_) virtual public {\\n        require(address(timelock) == address(0), \\\"GovernorBravo::initialize: can only initialize once\\\");\\n        require(msg.sender == admin, \\\"GovernorBravo::initialize: admin only\\\");\\n        require(timelock_ != address(0), \\\"GovernorBravo::initialize: invalid timelock address\\\");\\n        require(comp_ != address(0), \\\"GovernorBravo::initialize: invalid comp address\\\");\\n        require(votingPeriod_ >= MIN_VOTING_PERIOD && votingPeriod_ <= MAX_VOTING_PERIOD, \\\"GovernorBravo::initialize: invalid voting period\\\");\\n        require(votingDelay_ >= MIN_VOTING_DELAY && votingDelay_ <= MAX_VOTING_DELAY, \\\"GovernorBravo::initialize: invalid voting delay\\\");\\n        require(proposalThreshold_ >= MIN_PROPOSAL_THRESHOLD && proposalThreshold_ <= MAX_PROPOSAL_THRESHOLD, \\\"GovernorBravo::initialize: invalid proposal threshold\\\");\\n\\n        timelock = TimelockInterface(timelock_);\\n        comp = CompInterface(comp_);\\n        votingPeriod = votingPeriod_;\\n        votingDelay = votingDelay_;\\n        proposalThreshold = proposalThreshold_;\\n    }\\n\\n    /**\\n      * @notice Function used to propose a new proposal. Sender must have delegates above the proposal threshold\\n      * @param targets Target addresses for proposal calls\\n      * @param values Eth values for proposal calls\\n      * @param signatures Function signatures for proposal calls\\n      * @param calldatas Calldatas for proposal calls\\n      * @param description String description of the proposal\\n      * @return Proposal id of new proposal\\n      */\\n    function propose(address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas, string memory description) public returns (uint) {\\n        // Reject proposals before initiating as Governor\\n        require(initialProposalId != 0, \\\"GovernorBravo::propose: Governor Bravo not active\\\");\\n        // Allow addresses above proposal threshold and whitelisted addresses to propose\\n        require(comp.getPriorVotes(msg.sender, sub256(block.number, 1)) > proposalThreshold || isWhitelisted(msg.sender), \\\"GovernorBravo::propose: proposer votes below proposal threshold\\\");\\n        require(targets.length == values.length && targets.length == signatures.length && targets.length == calldatas.length, \\\"GovernorBravo::propose: proposal function information arity mismatch\\\");\\n        require(targets.length != 0, \\\"GovernorBravo::propose: must provide actions\\\");\\n        require(targets.length <= proposalMaxOperations, \\\"GovernorBravo::propose: too many actions\\\");\\n\\n        uint latestProposalId = latestProposalIds[msg.sender];\\n        if (latestProposalId != 0) {\\n          ProposalState proposersLatestProposalState = state(latestProposalId);\\n          require(proposersLatestProposalState != ProposalState.Active, \\\"GovernorBravo::propose: one live proposal per proposer, found an already active proposal\\\");\\n          require(proposersLatestProposalState != ProposalState.Pending, \\\"GovernorBravo::propose: one live proposal per proposer, found an already pending proposal\\\");\\n        }\\n\\n        uint startBlock = add256(block.number, votingDelay);\\n        uint endBlock = add256(startBlock, votingPeriod);\\n\\n        proposalCount++;\\n        uint newProposalID = proposalCount;\\n        Proposal storage newProposal = proposals[newProposalID];\\n        // This should never happen but add a check in case.\\n        require(newProposal.id == 0, \\\"GovernorBravo::propose: ProposalID collsion\\\");\\n        newProposal.id = newProposalID;\\n        newProposal.proposer = msg.sender;\\n        newProposal.eta = 0;\\n        newProposal.targets = targets;\\n        newProposal.values = values;\\n        newProposal.signatures = signatures;\\n        newProposal.calldatas = calldatas;\\n        newProposal.startBlock = startBlock;\\n        newProposal.endBlock = endBlock;\\n        newProposal.forVotes = 0;\\n        newProposal.againstVotes = 0;\\n        newProposal.abstainVotes = 0;\\n        newProposal.canceled = false;\\n        newProposal.executed = false;\\n\\n        latestProposalIds[newProposal.proposer] = newProposal.id;\\n\\n        emit ProposalCreated(newProposal.id, msg.sender, targets, values, signatures, calldatas, startBlock, endBlock, description);\\n        return newProposal.id;\\n    }\\n\\n    /**\\n      * @notice Queues a proposal of state succeeded\\n      * @param proposalId The id of the proposal to queue\\n      */\\n    function queue(uint proposalId) external {\\n        require(state(proposalId) == ProposalState.Succeeded, \\\"GovernorBravo::queue: proposal can only be queued if it is succeeded\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        uint eta = add256(block.timestamp, timelock.delay());\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            queueOrRevertInternal(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], eta);\\n        }\\n        proposal.eta = eta;\\n        emit ProposalQueued(proposalId, eta);\\n    }\\n\\n    function queueOrRevertInternal(address target, uint value, string memory signature, bytes memory data, uint eta) internal {\\n        require(!timelock.queuedTransactions(keccak256(abi.encode(target, value, signature, data, eta))), \\\"GovernorBravo::queueOrRevertInternal: identical proposal action already queued at eta\\\");\\n        timelock.queueTransaction(target, value, signature, data, eta);\\n    }\\n\\n    /**\\n      * @notice Executes a queued proposal if eta has passed\\n      * @param proposalId The id of the proposal to execute\\n      */\\n    function execute(uint proposalId) external payable {\\n        require(state(proposalId) == ProposalState.Queued, \\\"GovernorBravo::execute: proposal can only be executed if it is queued\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        proposal.executed = true;\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            timelock.executeTransaction{value: proposal.values[i]}(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\\n        }\\n        emit ProposalExecuted(proposalId);\\n    }\\n\\n    /**\\n      * @notice Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\\n      * @param proposalId The id of the proposal to cancel\\n      */\\n    function cancel(uint proposalId) external {\\n        require(state(proposalId) != ProposalState.Executed, \\\"GovernorBravo::cancel: cannot cancel executed proposal\\\");\\n\\n        Proposal storage proposal = proposals[proposalId];\\n\\n        // Proposer can cancel\\n        if(msg.sender != proposal.proposer) {\\n            // Whitelisted proposers can't be canceled for falling below proposal threshold\\n            if(isWhitelisted(proposal.proposer)) {\\n                require((comp.getPriorVotes(proposal.proposer, sub256(block.number, 1)) < proposalThreshold) && msg.sender == whitelistGuardian, \\\"GovernorBravo::cancel: whitelisted proposer\\\");\\n            }\\n            else {\\n                require((comp.getPriorVotes(proposal.proposer, sub256(block.number, 1)) < proposalThreshold), \\\"GovernorBravo::cancel: proposer above threshold\\\");\\n            }\\n        }\\n\\n        proposal.canceled = true;\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            timelock.cancelTransaction(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\\n        }\\n\\n        emit ProposalCanceled(proposalId);\\n    }\\n\\n    /**\\n      * @notice Gets actions of a proposal\\n      * @param proposalId the id of the proposal\\n      * @return targets of the proposal actions\\n      * @return values of the proposal actions\\n      * @return signatures of the proposal actions\\n      * @return calldatas of the proposal actions\\n      */\\n    function getActions(uint proposalId) external view returns (address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas) {\\n        Proposal storage p = proposals[proposalId];\\n        return (p.targets, p.values, p.signatures, p.calldatas);\\n    }\\n\\n    /**\\n      * @notice Gets the receipt for a voter on a given proposal\\n      * @param proposalId the id of proposal\\n      * @param voter The address of the voter\\n      * @return The voting receipt\\n      */\\n    function getReceipt(uint proposalId, address voter) external view returns (Receipt memory) {\\n        return proposals[proposalId].receipts[voter];\\n    }\\n\\n    /**\\n      * @notice Gets the state of a proposal\\n      * @param proposalId The id of the proposal\\n      * @return Proposal state\\n      */\\n    function state(uint proposalId) public view returns (ProposalState) {\\n        require(proposalCount >= proposalId && proposalId > initialProposalId, \\\"GovernorBravo::state: invalid proposal id\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        if (proposal.canceled) {\\n            return ProposalState.Canceled;\\n        } else if (block.number <= proposal.startBlock) {\\n            return ProposalState.Pending;\\n        } else if (block.number <= proposal.endBlock) {\\n            return ProposalState.Active;\\n        } else if (proposal.forVotes <= proposal.againstVotes || proposal.forVotes < quorumVotes) {\\n            return ProposalState.Defeated;\\n        } else if (proposal.eta == 0) {\\n            return ProposalState.Succeeded;\\n        } else if (proposal.executed) {\\n            return ProposalState.Executed;\\n        } else if (block.timestamp >= add256(proposal.eta, timelock.GRACE_PERIOD())) {\\n            return ProposalState.Expired;\\n        } else {\\n            return ProposalState.Queued;\\n        }\\n    }\\n\\n    /**\\n      * @notice Cast a vote for a proposal\\n      * @param proposalId The id of the proposal to vote on\\n      * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n      */\\n    function castVote(uint proposalId, uint8 support) external {\\n        emit VoteCast(msg.sender, proposalId, support, castVoteInternal(msg.sender, proposalId, support), \\\"\\\");\\n    }\\n\\n    /**\\n      * @notice Cast a vote for a proposal with a reason\\n      * @param proposalId The id of the proposal to vote on\\n      * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n      * @param reason The reason given for the vote by the voter\\n      */\\n    function castVoteWithReason(uint proposalId, uint8 support, string calldata reason) external {\\n        emit VoteCast(msg.sender, proposalId, support, castVoteInternal(msg.sender, proposalId, support), reason);\\n    }\\n\\n    /**\\n      * @notice Cast a vote for a proposal by signature\\n      * @dev External function that accepts EIP-712 signatures for voting on proposals.\\n      */\\n    function castVoteBySig(uint proposalId, uint8 support, uint8 v, bytes32 r, bytes32 s) external {\\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainIdInternal(), address(this)));\\n        bytes32 structHash = keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\\n        bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(signatory != address(0), \\\"GovernorBravo::castVoteBySig: invalid signature\\\");\\n        emit VoteCast(signatory, proposalId, support, castVoteInternal(signatory, proposalId, support), \\\"\\\");\\n    }\\n\\n    /**\\n      * @notice Internal function that caries out voting logic\\n      * @param voter The voter that is casting their vote\\n      * @param proposalId The id of the proposal to vote on\\n      * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n      * @return The number of votes cast\\n      */\\n    function castVoteInternal(address voter, uint proposalId, uint8 support) internal returns (uint96) {\\n        require(state(proposalId) == ProposalState.Active, \\\"GovernorBravo::castVoteInternal: voting is closed\\\");\\n        require(support <= 2, \\\"GovernorBravo::castVoteInternal: invalid vote type\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        Receipt storage receipt = proposal.receipts[voter];\\n        require(receipt.hasVoted == false, \\\"GovernorBravo::castVoteInternal: voter already voted\\\");\\n        uint96 votes = comp.getPriorVotes(voter, proposal.startBlock);\\n\\n        if (support == 0) {\\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\\n        } else if (support == 1) {\\n            proposal.forVotes = add256(proposal.forVotes, votes);\\n        } else if (support == 2) {\\n            proposal.abstainVotes = add256(proposal.abstainVotes, votes);\\n        }\\n\\n        receipt.hasVoted = true;\\n        receipt.support = support;\\n        receipt.votes = votes;\\n\\n        return votes;\\n    }\\n\\n    /**\\n     * @notice View function which returns if an account is whitelisted\\n     * @param account Account to check white list status of\\n     * @return If the account is whitelisted\\n     */\\n    function isWhitelisted(address account) public view returns (bool) {\\n        return (whitelistAccountExpirations[account] > block.timestamp);\\n    }\\n\\n    /**\\n      * @notice Admin function for setting the voting delay\\n      * @param newVotingDelay new voting delay, in blocks\\n      */\\n    function _setVotingDelay(uint newVotingDelay) external {\\n        require(msg.sender == admin, \\\"GovernorBravo::_setVotingDelay: admin only\\\");\\n        require(newVotingDelay >= MIN_VOTING_DELAY && newVotingDelay <= MAX_VOTING_DELAY, \\\"GovernorBravo::_setVotingDelay: invalid voting delay\\\");\\n        uint oldVotingDelay = votingDelay;\\n        votingDelay = newVotingDelay;\\n\\n        emit VotingDelaySet(oldVotingDelay,votingDelay);\\n    }\\n\\n    /**\\n      * @notice Admin function for setting the voting period\\n      * @param newVotingPeriod new voting period, in blocks\\n      */\\n    function _setVotingPeriod(uint newVotingPeriod) external {\\n        require(msg.sender == admin, \\\"GovernorBravo::_setVotingPeriod: admin only\\\");\\n        require(newVotingPeriod >= MIN_VOTING_PERIOD && newVotingPeriod <= MAX_VOTING_PERIOD, \\\"GovernorBravo::_setVotingPeriod: invalid voting period\\\");\\n        uint oldVotingPeriod = votingPeriod;\\n        votingPeriod = newVotingPeriod;\\n\\n        emit VotingPeriodSet(oldVotingPeriod, votingPeriod);\\n    }\\n\\n    /**\\n      * @notice Admin function for setting the proposal threshold\\n      * @dev newProposalThreshold must be greater than the hardcoded min\\n      * @param newProposalThreshold new proposal threshold\\n      */\\n    function _setProposalThreshold(uint newProposalThreshold) external {\\n        require(msg.sender == admin, \\\"GovernorBravo::_setProposalThreshold: admin only\\\");\\n        require(newProposalThreshold >= MIN_PROPOSAL_THRESHOLD && newProposalThreshold <= MAX_PROPOSAL_THRESHOLD, \\\"GovernorBravo::_setProposalThreshold: invalid proposal threshold\\\");\\n        uint oldProposalThreshold = proposalThreshold;\\n        proposalThreshold = newProposalThreshold;\\n\\n        emit ProposalThresholdSet(oldProposalThreshold, proposalThreshold);\\n    }\\n\\n    /**\\n     * @notice Admin function for setting the whitelist expiration as a timestamp for an account. Whitelist status allows accounts to propose without meeting threshold\\n     * @param account Account address to set whitelist expiration for\\n     * @param expiration Expiration for account whitelist status as timestamp (if now < expiration, whitelisted)\\n     */\\n    function _setWhitelistAccountExpiration(address account, uint expiration) external {\\n        require(msg.sender == admin || msg.sender == whitelistGuardian, \\\"GovernorBravo::_setWhitelistAccountExpiration: admin only\\\");\\n        whitelistAccountExpirations[account] = expiration;\\n\\n        emit WhitelistAccountExpirationSet(account, expiration);\\n    }\\n\\n    /**\\n     * @notice Admin function for setting the whitelistGuardian. WhitelistGuardian can cancel proposals from whitelisted addresses\\n     * @param account Account to set whitelistGuardian to (0x0 to remove whitelistGuardian)\\n     */\\n     function _setWhitelistGuardian(address account) external {\\n        require(msg.sender == admin, \\\"GovernorBravo::_setWhitelistGuardian: admin only\\\");\\n        address oldGuardian = whitelistGuardian;\\n        whitelistGuardian = account;\\n\\n        emit WhitelistGuardianSet(oldGuardian, whitelistGuardian);\\n     }\\n\\n    /**\\n      * @notice Initiate the GovernorBravo contract\\n      * @dev Admin only. Sets initial proposal id which initiates the contract, ensuring a continuous proposal id count\\n      * @param governorAlpha The address for the Governor to continue the proposal id count from\\n      */\\n    function _initiate(address governorAlpha) external {\\n        require(msg.sender == admin, \\\"GovernorBravo::_initiate: admin only\\\");\\n        require(initialProposalId == 0, \\\"GovernorBravo::_initiate: can only initiate once\\\");\\n        proposalCount = GovernorAlpha(governorAlpha).proposalCount();\\n        initialProposalId = proposalCount;\\n        timelock.acceptAdmin();\\n    }\\n\\n    /**\\n      * @notice Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\n      * @dev Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\n      * @param newPendingAdmin New pending admin.\\n      */\\n    function _setPendingAdmin(address newPendingAdmin) external {\\n        // Check caller = admin\\n        require(msg.sender == admin, \\\"GovernorBravo:_setPendingAdmin: admin only\\\");\\n\\n        // Save current value, if any, for inclusion in log\\n        address oldPendingAdmin = pendingAdmin;\\n\\n        // Store pendingAdmin with value newPendingAdmin\\n        pendingAdmin = newPendingAdmin;\\n\\n        // Emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin)\\n        emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin);\\n    }\\n\\n    /**\\n      * @notice Accepts transfer of admin rights. msg.sender must be pendingAdmin\\n      * @dev Admin function for pending admin to accept role and update admin\\n      */\\n    function _acceptAdmin() external {\\n        // Check caller is pendingAdmin and pendingAdmin \\u2260 address(0)\\n        require(msg.sender == pendingAdmin && msg.sender != address(0), \\\"GovernorBravo:_acceptAdmin: pending admin only\\\");\\n\\n        // Save current values for inclusion in log\\n        address oldAdmin = admin;\\n        address oldPendingAdmin = pendingAdmin;\\n\\n        // Store admin with value pendingAdmin\\n        admin = pendingAdmin;\\n\\n        // Clear the pending value\\n        pendingAdmin = address(0);\\n\\n        emit NewAdmin(oldAdmin, admin);\\n        emit NewPendingAdmin(oldPendingAdmin, pendingAdmin);\\n    }\\n\\n    function add256(uint256 a, uint256 b) internal pure returns (uint) {\\n        uint c = a + b;\\n        require(c >= a, \\\"addition overflow\\\");\\n        return c;\\n    }\\n\\n    function sub256(uint256 a, uint256 b) internal pure returns (uint) {\\n        require(b <= a, \\\"subtraction underflow\\\");\\n        return a - b;\\n    }\\n\\n    function getChainIdInternal() internal view returns (uint) {\\n        uint chainId;\\n        assembly { chainId := chainid() }\\n        return chainId;\\n    }\\n}\\n\",\"keccak256\":\"0x8d475a8df558ea772806b9f6dea571ae2d874cf27f0fe6f7afce842c94c98d03\",\"license\":\"BSD-3-Clause\"},\"contracts/Governance/GovernorBravoInterfaces.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity ^0.8.10;\\n\\n\\ncontract GovernorBravoEvents {\\n    /// @notice An event emitted when a new proposal is created\\n    event ProposalCreated(uint id, address proposer, address[] targets, uint[] values, string[] signatures, bytes[] calldatas, uint startBlock, uint endBlock, string description);\\n\\n    /// @notice An event emitted when a vote has been cast on a proposal\\n    /// @param voter The address which casted a vote\\n    /// @param proposalId The proposal id which was voted on\\n    /// @param support Support value for the vote. 0=against, 1=for, 2=abstain\\n    /// @param votes Number of votes which were cast by the voter\\n    /// @param reason The reason given for the vote by the voter\\n    event VoteCast(address indexed voter, uint proposalId, uint8 support, uint votes, string reason);\\n\\n    /// @notice An event emitted when a proposal has been canceled\\n    event ProposalCanceled(uint id);\\n\\n    /// @notice An event emitted when a proposal has been queued in the Timelock\\n    event ProposalQueued(uint id, uint eta);\\n\\n    /// @notice An event emitted when a proposal has been executed in the Timelock\\n    event ProposalExecuted(uint id);\\n\\n    /// @notice An event emitted when the voting delay is set\\n    event VotingDelaySet(uint oldVotingDelay, uint newVotingDelay);\\n\\n    /// @notice An event emitted when the voting period is set\\n    event VotingPeriodSet(uint oldVotingPeriod, uint newVotingPeriod);\\n\\n    /// @notice Emitted when implementation is changed\\n    event NewImplementation(address oldImplementation, address newImplementation);\\n\\n    /// @notice Emitted when proposal threshold is set\\n    event ProposalThresholdSet(uint oldProposalThreshold, uint newProposalThreshold);\\n\\n    /// @notice Emitted when pendingAdmin is changed\\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\n\\n    /// @notice Emitted when pendingAdmin is accepted, which means admin is updated\\n    event NewAdmin(address oldAdmin, address newAdmin);\\n\\n    /// @notice Emitted when whitelist account expiration is set\\n    event WhitelistAccountExpirationSet(address account, uint expiration);\\n\\n    /// @notice Emitted when the whitelistGuardian is set\\n    event WhitelistGuardianSet(address oldGuardian, address newGuardian);\\n}\\n\\ncontract GovernorBravoDelegatorStorage {\\n    /// @notice Administrator for this contract\\n    address public admin;\\n\\n    /// @notice Pending administrator for this contract\\n    address public pendingAdmin;\\n\\n    /// @notice Active brains of Governor\\n    address public implementation;\\n}\\n\\n\\n/**\\n * @title Storage for Governor Bravo Delegate\\n * @notice For future upgrades, do not change GovernorBravoDelegateStorageV1. Create a new\\n * contract which implements GovernorBravoDelegateStorageV1 and following the naming convention\\n * GovernorBravoDelegateStorageVX.\\n */\\ncontract GovernorBravoDelegateStorageV1 is GovernorBravoDelegatorStorage {\\n\\n    /// @notice The delay before voting on a proposal may take place, once proposed, in blocks\\n    uint public votingDelay;\\n\\n    /// @notice The duration of voting on a proposal, in blocks\\n    uint public votingPeriod;\\n\\n    /// @notice The number of votes required in order for a voter to become a proposer\\n    uint public proposalThreshold;\\n\\n    /// @notice Initial proposal id set at become\\n    uint public initialProposalId;\\n\\n    /// @notice The total number of proposals\\n    uint public proposalCount;\\n\\n    /// @notice The address of the Compound Protocol Timelock\\n    TimelockInterface public timelock;\\n\\n    /// @notice The address of the Compound governance token\\n    CompInterface public comp;\\n\\n    /// @notice The official record of all proposals ever proposed\\n    mapping (uint => Proposal) public proposals;\\n\\n    /// @notice The latest proposal for each proposer\\n    mapping (address => uint) public latestProposalIds;\\n\\n\\n    struct Proposal {\\n        /// @notice Unique id for looking up a proposal\\n        uint id;\\n\\n        /// @notice Creator of the proposal\\n        address proposer;\\n\\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint eta;\\n\\n        /// @notice the ordered list of target addresses for calls to be made\\n        address[] targets;\\n\\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n        uint[] values;\\n\\n        /// @notice The ordered list of function signatures to be called\\n        string[] signatures;\\n\\n        /// @notice The ordered list of calldata to be passed to each call\\n        bytes[] calldatas;\\n\\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\\n        uint startBlock;\\n\\n        /// @notice The block at which voting ends: votes must be cast prior to this block\\n        uint endBlock;\\n\\n        /// @notice Current number of votes in favor of this proposal\\n        uint forVotes;\\n\\n        /// @notice Current number of votes in opposition to this proposal\\n        uint againstVotes;\\n\\n        /// @notice Current number of votes for abstaining for this proposal\\n        uint abstainVotes;\\n\\n        /// @notice Flag marking whether the proposal has been canceled\\n        bool canceled;\\n\\n        /// @notice Flag marking whether the proposal has been executed\\n        bool executed;\\n\\n        /// @notice Receipts of ballots for the entire set of voters\\n        mapping (address => Receipt) receipts;\\n    }\\n\\n    /// @notice Ballot receipt record for a voter\\n    struct Receipt {\\n        /// @notice Whether or not a vote has been cast\\n        bool hasVoted;\\n\\n        /// @notice Whether or not the voter supports the proposal or abstains\\n        uint8 support;\\n\\n        /// @notice The number of votes the voter had, which were cast\\n        uint96 votes;\\n    }\\n\\n    /// @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Defeated,\\n        Succeeded,\\n        Queued,\\n        Expired,\\n        Executed\\n    }\\n}\\n\\ncontract GovernorBravoDelegateStorageV2 is GovernorBravoDelegateStorageV1 {\\n    /// @notice Stores the expiration of account whitelist status as a timestamp\\n    mapping (address => uint) public whitelistAccountExpirations;\\n\\n    /// @notice Address which manages whitelisted proposals and whitelist accounts\\n    address public whitelistGuardian;\\n}\\n\\ninterface TimelockInterface {\\n    function delay() external view returns (uint);\\n    function GRACE_PERIOD() external view returns (uint);\\n    function acceptAdmin() external;\\n    function queuedTransactions(bytes32 hash) external view returns (bool);\\n    function queueTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external returns (bytes32);\\n    function cancelTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external;\\n    function executeTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external payable returns (bytes memory);\\n}\\n\\ninterface CompInterface {\\n    function getPriorVotes(address account, uint blockNumber) external view returns (uint96);\\n}\\n\\ninterface GovernorAlpha {\\n    /// @notice The total number of proposals\\n    function proposalCount() external returns (uint);\\n}\\n\",\"keccak256\":\"0xf517c16539df74103ca9ec9047c85605d00e25aff6be9d1526c406139563c651\",\"license\":\"BSD-3-Clause\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "_acceptAdmin()": {
        "details": "Admin function for pending admin to accept role and update admin"
      },
      "_initiate(address)": {
        "details": "Admin only. Sets initial proposal id which initiates the contract, ensuring a continuous proposal id count",
        "params": {
          "governorAlpha": "The address for the Governor to continue the proposal id count from"
        }
      },
      "_setPendingAdmin(address)": {
        "details": "Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.",
        "params": {
          "newPendingAdmin": "New pending admin."
        }
      },
      "_setProposalThreshold(uint256)": {
        "details": "newProposalThreshold must be greater than the hardcoded min",
        "params": {
          "newProposalThreshold": "new proposal threshold"
        }
      },
      "_setVotingDelay(uint256)": {
        "params": {
          "newVotingDelay": "new voting delay, in blocks"
        }
      },
      "_setVotingPeriod(uint256)": {
        "params": {
          "newVotingPeriod": "new voting period, in blocks"
        }
      },
      "_setWhitelistAccountExpiration(address,uint256)": {
        "params": {
          "account": "Account address to set whitelist expiration for",
          "expiration": "Expiration for account whitelist status as timestamp (if now < expiration, whitelisted)"
        }
      },
      "_setWhitelistGuardian(address)": {
        "params": {
          "account": "Account to set whitelistGuardian to (0x0 to remove whitelistGuardian)"
        }
      },
      "cancel(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to cancel"
        }
      },
      "castVote(uint256,uint8)": {
        "params": {
          "proposalId": "The id of the proposal to vote on",
          "support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "details": "External function that accepts EIP-712 signatures for voting on proposals."
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "params": {
          "proposalId": "The id of the proposal to vote on",
          "reason": "The reason given for the vote by the voter",
          "support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "execute(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to execute"
        }
      },
      "getActions(uint256)": {
        "params": {
          "proposalId": "the id of the proposal"
        },
        "returns": {
          "calldatas": "of the proposal actions",
          "signatures": "of the proposal actions",
          "targets": "of the proposal actions",
          "values": "of the proposal actions"
        }
      },
      "getReceipt(uint256,address)": {
        "params": {
          "proposalId": "the id of proposal",
          "voter": "The address of the voter"
        },
        "returns": {
          "_0": "The voting receipt"
        }
      },
      "initialize(address,address,uint256,uint256,uint256)": {
        "params": {
          "comp_": "The address of the COMP token",
          "proposalThreshold_": "The initial proposal threshold",
          "timelock_": "The address of the Timelock",
          "votingDelay_": "The initial voting delay",
          "votingPeriod_": "The initial voting period"
        }
      },
      "isWhitelisted(address)": {
        "params": {
          "account": "Account to check white list status of"
        },
        "returns": {
          "_0": "If the account is whitelisted"
        }
      },
      "propose(address[],uint256[],string[],bytes[],string)": {
        "params": {
          "calldatas": "Calldatas for proposal calls",
          "description": "String description of the proposal",
          "signatures": "Function signatures for proposal calls",
          "targets": "Target addresses for proposal calls",
          "values": "Eth values for proposal calls"
        },
        "returns": {
          "_0": "Proposal id of new proposal"
        }
      },
      "queue(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to queue"
        }
      },
      "state(uint256)": {
        "params": {
          "proposalId": "The id of the proposal"
        },
        "returns": {
          "_0": "Proposal state"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "NewAdmin(address,address)": {
        "notice": "Emitted when pendingAdmin is accepted, which means admin is updated"
      },
      "NewImplementation(address,address)": {
        "notice": "Emitted when implementation is changed"
      },
      "NewPendingAdmin(address,address)": {
        "notice": "Emitted when pendingAdmin is changed"
      },
      "ProposalCanceled(uint256)": {
        "notice": "An event emitted when a proposal has been canceled"
      },
      "ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)": {
        "notice": "An event emitted when a new proposal is created"
      },
      "ProposalExecuted(uint256)": {
        "notice": "An event emitted when a proposal has been executed in the Timelock"
      },
      "ProposalQueued(uint256,uint256)": {
        "notice": "An event emitted when a proposal has been queued in the Timelock"
      },
      "ProposalThresholdSet(uint256,uint256)": {
        "notice": "Emitted when proposal threshold is set"
      },
      "VoteCast(address,uint256,uint8,uint256,string)": {
        "notice": "An event emitted when a vote has been cast on a proposal"
      },
      "VotingDelaySet(uint256,uint256)": {
        "notice": "An event emitted when the voting delay is set"
      },
      "VotingPeriodSet(uint256,uint256)": {
        "notice": "An event emitted when the voting period is set"
      },
      "WhitelistAccountExpirationSet(address,uint256)": {
        "notice": "Emitted when whitelist account expiration is set"
      },
      "WhitelistGuardianSet(address,address)": {
        "notice": "Emitted when the whitelistGuardian is set"
      }
    },
    "kind": "user",
    "methods": {
      "BALLOT_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the ballot struct used by the contract"
      },
      "DOMAIN_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the contract's domain"
      },
      "MAX_PROPOSAL_THRESHOLD()": {
        "notice": "The maximum setable proposal threshold"
      },
      "MAX_VOTING_DELAY()": {
        "notice": "The max setable voting delay"
      },
      "MAX_VOTING_PERIOD()": {
        "notice": "The max setable voting period"
      },
      "MIN_PROPOSAL_THRESHOLD()": {
        "notice": "The minimum setable proposal threshold"
      },
      "MIN_VOTING_DELAY()": {
        "notice": "The min setable voting delay"
      },
      "MIN_VOTING_PERIOD()": {
        "notice": "The minimum setable voting period"
      },
      "_acceptAdmin()": {
        "notice": "Accepts transfer of admin rights. msg.sender must be pendingAdmin"
      },
      "_initiate(address)": {
        "notice": "Initiate the GovernorBravo contract"
      },
      "_setPendingAdmin(address)": {
        "notice": "Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer."
      },
      "_setProposalThreshold(uint256)": {
        "notice": "Admin function for setting the proposal threshold"
      },
      "_setVotingDelay(uint256)": {
        "notice": "Admin function for setting the voting delay"
      },
      "_setVotingPeriod(uint256)": {
        "notice": "Admin function for setting the voting period"
      },
      "_setWhitelistAccountExpiration(address,uint256)": {
        "notice": "Admin function for setting the whitelist expiration as a timestamp for an account. Whitelist status allows accounts to propose without meeting threshold"
      },
      "_setWhitelistGuardian(address)": {
        "notice": "Admin function for setting the whitelistGuardian. WhitelistGuardian can cancel proposals from whitelisted addresses"
      },
      "admin()": {
        "notice": "Administrator for this contract"
      },
      "cancel(uint256)": {
        "notice": "Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold"
      },
      "castVote(uint256,uint8)": {
        "notice": "Cast a vote for a proposal"
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "notice": "Cast a vote for a proposal by signature"
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "notice": "Cast a vote for a proposal with a reason"
      },
      "comp()": {
        "notice": "The address of the Compound governance token"
      },
      "execute(uint256)": {
        "notice": "Executes a queued proposal if eta has passed"
      },
      "getActions(uint256)": {
        "notice": "Gets actions of a proposal"
      },
      "getReceipt(uint256,address)": {
        "notice": "Gets the receipt for a voter on a given proposal"
      },
      "implementation()": {
        "notice": "Active brains of Governor"
      },
      "initialProposalId()": {
        "notice": "Initial proposal id set at become"
      },
      "initialize(address,address,uint256,uint256,uint256)": {
        "notice": "Used to initialize the contract during delegator constructor"
      },
      "isWhitelisted(address)": {
        "notice": "View function which returns if an account is whitelisted"
      },
      "latestProposalIds(address)": {
        "notice": "The latest proposal for each proposer"
      },
      "name()": {
        "notice": "The name of this contract"
      },
      "pendingAdmin()": {
        "notice": "Pending administrator for this contract"
      },
      "proposalCount()": {
        "notice": "The total number of proposals"
      },
      "proposalMaxOperations()": {
        "notice": "The maximum number of actions that can be included in a proposal"
      },
      "proposalThreshold()": {
        "notice": "The number of votes required in order for a voter to become a proposer"
      },
      "proposals(uint256)": {
        "notice": "The official record of all proposals ever proposed"
      },
      "propose(address[],uint256[],string[],bytes[],string)": {
        "notice": "Function used to propose a new proposal. Sender must have delegates above the proposal threshold"
      },
      "queue(uint256)": {
        "notice": "Queues a proposal of state succeeded"
      },
      "quorumVotes()": {
        "notice": "The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"
      },
      "state(uint256)": {
        "notice": "Gets the state of a proposal"
      },
      "timelock()": {
        "notice": "The address of the Compound Protocol Timelock"
      },
      "votingDelay()": {
        "notice": "The delay before voting on a proposal may take place, once proposed, in blocks"
      },
      "votingPeriod()": {
        "notice": "The duration of voting on a proposal, in blocks"
      },
      "whitelistAccountExpirations(address)": {
        "notice": "Stores the expiration of account whitelist status as a timestamp"
      },
      "whitelistGuardian()": {
        "notice": "Address which manages whitelisted proposals and whitelist accounts"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15434,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 15437,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "pendingAdmin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 15440,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "implementation",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 15447,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "votingDelay",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 15450,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "votingPeriod",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 15453,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "proposalThreshold",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 15456,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "initialProposalId",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 15459,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "proposalCount",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 15463,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "timelock",
        "offset": 0,
        "slot": "8",
        "type": "t_contract(TimelockInterface)15626"
      },
      {
        "astId": 15467,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "comp",
        "offset": 0,
        "slot": "9",
        "type": "t_contract(CompInterface)15636"
      },
      {
        "astId": 15473,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "proposals",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_struct(Proposal)15531_storage)"
      },
      {
        "astId": 15478,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "latestProposalIds",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 15558,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "whitelistAccountExpirations",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 15561,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "whitelistGuardian",
        "offset": 0,
        "slot": "13",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(CompInterface)15636": {
        "encoding": "inplace",
        "label": "contract CompInterface",
        "numberOfBytes": "20"
      },
      "t_contract(TimelockInterface)15626": {
        "encoding": "inplace",
        "label": "contract TimelockInterface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Receipt)15541_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GovernorBravoDelegateStorageV1.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)15541_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Proposal)15531_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GovernorBravoDelegateStorageV1.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)15531_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)15531_storage": {
        "encoding": "inplace",
        "label": "struct GovernorBravoDelegateStorageV1.Proposal",
        "members": [
          {
            "astId": 15481,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 15484,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 15487,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "eta",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 15491,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "targets",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 15495,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "values",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 15499,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "signatures",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 15503,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "calldatas",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 15506,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "startBlock",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 15509,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "endBlock",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 15512,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "forVotes",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 15515,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "againstVotes",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 15518,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "abstainVotes",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          },
          {
            "astId": 15521,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "canceled",
            "offset": 0,
            "slot": "12",
            "type": "t_bool"
          },
          {
            "astId": 15524,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "executed",
            "offset": 1,
            "slot": "12",
            "type": "t_bool"
          },
          {
            "astId": 15530,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "receipts",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(Receipt)15541_storage)"
          }
        ],
        "numberOfBytes": "448"
      },
      "t_struct(Receipt)15541_storage": {
        "encoding": "inplace",
        "label": "struct GovernorBravoDelegateStorageV1.Receipt",
        "members": [
          {
            "astId": 15534,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 15537,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "support",
            "offset": 1,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 15540,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "votes",
            "offset": 2,
            "slot": "0",
            "type": "t_uint96"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  }
}