{
  "address": "0x2f1772836b0ec7b3a93409aA8B40bbcfa392Cd16",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "referenceAmountInWei",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "interestRateModel",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "reserveFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "getSimulationResponse",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256[]",
              "name": "borrowSimulation",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "supplySimulation",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct InterestRateModelLens.SimulationResponse",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8abbc79f7c9384dbdd2ba3b7d1c82b9ca45b561fdba958ccbc970c6c075a1b67",
  "receipt": {
    "to": null,
    "from": "0x939CaC66A13a8F777cc898B81c98eF50eC97796D",
    "contractAddress": "0x2f1772836b0ec7b3a93409aA8B40bbcfa392Cd16",
    "transactionIndex": 1,
    "gasUsed": "278643",
    "logsBloom": "0x
    "blockHash": "0x110627f375ebe03471ada673f689175085ac30bfd3427d8a77138a19154132e1",
    "transactionHash": "0x8abbc79f7c9384dbdd2ba3b7d1c82b9ca45b561fdba958ccbc970c6c075a1b67",
    "logs": [],
    "blockNumber": 13474225,
    "cumulativeGasUsed": "308523",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5ecd7ee38e7e9c7b038f1c3181ddcbfc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"referenceAmountInWei\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"interestRateModel\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reserveFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"getSimulationResponse\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"borrowSimulation\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"supplySimulation\",\"type\":\"uint256[]\"}],\"internalType\":\"struct InterestRateModelLens.SimulationResponse\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lens/InterestRateModelLens.sol\":\"InterestRateModelLens\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/InterestRateModel.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity ^0.8.10;\\n\\n/**\\n  * @title Compound's InterestRateModel Interface\\n  * @author Compound\\n  */\\nabstract contract InterestRateModel {\\n    /// @notice Indicator that this is an InterestRateModel contract (for inspection)\\n    bool public constant isInterestRateModel = true;\\n\\n    /**\\n      * @notice Calculates the current borrow interest rate per block\\n      * @param cash The total amount of cash the market has\\n      * @param borrows The total amount of borrows the market has outstanding\\n      * @param reserves The total amount of reserves the market has\\n      * @return The borrow rate per block (as a percentage, and scaled by 1e18)\\n      */\\n    function getBorrowRate(uint cash, uint borrows, uint reserves) virtual external view returns (uint);\\n\\n    /**\\n      * @notice Calculates the current supply interest rate per block\\n      * @param cash The total amount of cash the market has\\n      * @param borrows The total amount of borrows the market has outstanding\\n      * @param reserves The total amount of reserves the market has\\n      * @param reserveFactorMantissa The current reserve factor the market has\\n      * @return The supply rate per block (as a percentage, and scaled by 1e18)\\n      */\\n    function getSupplyRate(uint cash, uint borrows, uint reserves, uint reserveFactorMantissa) virtual external view returns (uint);\\n}\\n\",\"keccak256\":\"0x470821c8ff2120381ead6f54dba5c7b4fc0209682062bde51ea20291176aa0be\",\"license\":\"BSD-3-Clause\"},\"contracts/Lens/InterestRateModelLens.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity ^0.8.10;\\n\\nimport \\\"../InterestRateModel.sol\\\";\\n\\ncontract InterestRateModelLens {\\n    struct SimulationResponse {\\n        uint256[] borrowSimulation;\\n        uint256[] supplySimulation;\\n    }\\n\\n    function getSimulationResponse(\\n        uint referenceAmountInWei,\\n        address interestRateModel,\\n        uint reserveFactorMantissa\\n    ) external view returns (SimulationResponse memory) {\\n        InterestRateModel ir = InterestRateModel(interestRateModel);\\n\\n        uint256[] memory borrowSimulation = new uint256[](100);\\n        uint256[] memory supplySimulation = new uint256[](100);\\n\\n        uint borrow = referenceAmountInWei;\\n        uint reserves = 0;\\n\\n        for (uint percent_Factor = 1; percent_Factor <= 100; ++percent_Factor) {\\n            uint cash = (percent_Factor * referenceAmountInWei)/1e2;\\n            uint256 borrowRate = ir.getBorrowRate(cash, borrow, reserves);\\n            borrowSimulation[percent_Factor - 1] = borrowRate;\\n\\n            uint256 supplyRate = ir.getSupplyRate(cash, borrow, reserves, reserveFactorMantissa);\\n            supplySimulation[percent_Factor - 1] = supplyRate;\\n        }\\n\\n        return SimulationResponse({ borrowSimulation: borrowSimulation, supplySimulation: supplySimulation });\\n    }\\n}\",\"keccak256\":\"0x355ff8c112e99a4f0e51146df2295e820ab572a763800d24a9222b58a259c2c6\",\"license\":\"BSD-3-Clause\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610414806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ef4d43a214610030575b600080fd5b61004361003e366004610265565b610059565b60405161005091906102e4565b60405180910390f35b6040805180820182526060808252602082015281516064808252610ca08201909352909184916000918160200160208202803683375050604080516064808252610ca08201909252929350600092915060208201610c808036833701905050905086600060015b6064811161024757600060646100d68c8461033c565b6100e0919061035b565b6040516315f2405360e01b81526004810182905260248101869052604481018590529091506000906001600160a01b038916906315f2405390606401602060405180830381865afa158015610139573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015d919061037d565b9050808761016c600186610396565b8151811061017c5761017c6103ad565b6020908102919091010152604051635c0b440b60e11b8152600481018390526024810186905260448101859052606481018b90526000906001600160a01b038a169063b816881690608401602060405180830381865afa1580156101e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610208919061037d565b90508087610217600187610396565b81518110610227576102276103ad565b60200260200101818152505050505080610240906103c3565b90506100c0565b50506040805180820190915292835250602082015295945050505050565b60008060006060848603121561027a57600080fd5b8335925060208401356001600160a01b038116811461029857600080fd5b929592945050506040919091013590565b600081518084526020808501945080840160005b838110156102d9578151875295820195908201906001016102bd565b509495945050505050565b60208152600082516040602084015261030060608401826102a9565b90506020840151601f1984830301604085015261031d82826102a9565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561035657610356610326565b500290565b60008261037857634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561038f57600080fd5b5051919050565b6000828210156103a8576103a8610326565b500390565b634e487b7160e01b600052603260045260246000fd5b60006000198214156103d7576103d7610326565b506001019056fea2646970667358221220d74185b49ffadc7b97b833bfed0c389c149192483b41be3441aaaf45f624848664736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ef4d43a214610030575b600080fd5b61004361003e366004610265565b610059565b60405161005091906102e4565b60405180910390f35b6040805180820182526060808252602082015281516064808252610ca08201909352909184916000918160200160208202803683375050604080516064808252610ca08201909252929350600092915060208201610c808036833701905050905086600060015b6064811161024757600060646100d68c8461033c565b6100e0919061035b565b6040516315f2405360e01b81526004810182905260248101869052604481018590529091506000906001600160a01b038916906315f2405390606401602060405180830381865afa158015610139573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015d919061037d565b9050808761016c600186610396565b8151811061017c5761017c6103ad565b6020908102919091010152604051635c0b440b60e11b8152600481018390526024810186905260448101859052606481018b90526000906001600160a01b038a169063b816881690608401602060405180830381865afa1580156101e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610208919061037d565b90508087610217600187610396565b81518110610227576102276103ad565b60200260200101818152505050505080610240906103c3565b90506100c0565b50506040805180820190915292835250602082015295945050505050565b60008060006060848603121561027a57600080fd5b8335925060208401356001600160a01b038116811461029857600080fd5b929592945050506040919091013590565b600081518084526020808501945080840160005b838110156102d9578151875295820195908201906001016102bd565b509495945050505050565b60208152600082516040602084015261030060608401826102a9565b90506020840151601f1984830301604085015261031d82826102a9565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561035657610356610326565b500290565b60008261037857634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561038f57600080fd5b5051919050565b6000828210156103a8576103a8610326565b500390565b634e487b7160e01b600052603260045260246000fd5b60006000198214156103d7576103d7610326565b506001019056fea2646970667358221220d74185b49ffadc7b97b833bfed0c389c149192483b41be3441aaaf45f624848664736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}