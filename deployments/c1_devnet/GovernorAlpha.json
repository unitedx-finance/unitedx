{
  "address": "0xc76CB582f51C2b850D33c00fD9DA85bFc5eca062",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "timelock_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "comp_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "__abdicate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "__acceptAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "__executeSetTimelockPendingAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "__queueSetTimelockPendingAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "comp",
      "outputs": [
        {
          "internalType": "contract CompInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "support",
              "type": "bool"
            },
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ],
          "internalType": "struct GovernorAlpha.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "guardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalMaxOperations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum GovernorAlpha.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract TimelockInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x0154ac106bbced6418483e39ea571dc374b07706213b01a592c03b8ed545e7ea",
  "receipt": {
    "to": null,
    "from": "0x1946a1DD383FE3c3cd9ae3066C638EF6ed7E35e5",
    "contractAddress": "0xc76CB582f51C2b850D33c00fD9DA85bFc5eca062",
    "transactionIndex": 0,
    "gasUsed": "2853942",
    "logsBloom": "0x
    "blockHash": "0x14e7a40e69a44281aa5eef43a7a5b06e76d171b5a38f9586becd556a5174d7de",
    "transactionHash": "0x0154ac106bbced6418483e39ea571dc374b07706213b01a592c03b8ed545e7ea",
    "logs": [],
    "blockNumber": 15245958,
    "cumulativeGasUsed": "2853942",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6DB59B037DE599F511586440A87C12719C4f69Ff",
    "0xbC052E05c4e5d58935AF0e270747C1F12edCb52f",
    "0x1946a1DD383FE3c3cd9ae3066C638EF6ed7E35e5"
  ],
  "numDeployments": 1,
  "solcInputHash": "c71c568882dd726613bf6a2cea08cc9a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"timelock_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"comp_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"__abdicate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"__acceptAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"__executeSetTimelockPendingAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"__queueSetTimelockPendingAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comp\",\"outputs\":[{\"internalType\":\"contract CompInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"internalType\":\"struct GovernorAlpha.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalMaxOperations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum GovernorAlpha.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract TimelockInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"ProposalCanceled(uint256)\":{\"notice\":\"An event emitted when a proposal has been canceled\"},\"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)\":{\"notice\":\"An event emitted when a new proposal is created\"},\"ProposalExecuted(uint256)\":{\"notice\":\"An event emitted when a proposal has been executed in the Timelock\"},\"ProposalQueued(uint256,uint256)\":{\"notice\":\"An event emitted when a proposal has been queued in the Timelock\"},\"VoteCast(address,uint256,bool,uint256)\":{\"notice\":\"An event emitted when a vote has been cast on a proposal\"}},\"kind\":\"user\",\"methods\":{\"BALLOT_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the ballot struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"comp()\":{\"notice\":\"The address of the Compound governance token\"},\"guardian()\":{\"notice\":\"The address of the Governor Guardian\"},\"latestProposalIds(address)\":{\"notice\":\"The latest proposal for each proposer\"},\"name()\":{\"notice\":\"The name of this contract\"},\"proposalCount()\":{\"notice\":\"The total number of proposals\"},\"proposalMaxOperations()\":{\"notice\":\"The maximum number of actions that can be included in a proposal\"},\"proposalThreshold()\":{\"notice\":\"The number of votes required in order for a voter to become a proposer\"},\"proposals(uint256)\":{\"notice\":\"The official record of all proposals ever proposed\"},\"quorumVotes()\":{\"notice\":\"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\"},\"timelock()\":{\"notice\":\"The address of the Compound Protocol Timelock\"},\"votingDelay()\":{\"notice\":\"The delay before voting on a proposal may take place, once proposed\"},\"votingPeriod()\":{\"notice\":\"The duration of voting on a proposal, in blocks\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Governance/GovernorAlpha.sol\":\"GovernorAlpha\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Governance/GovernorAlpha.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity ^0.8.10;\\n\\ncontract GovernorAlpha {\\n    /// @notice The name of this contract\\n    string public constant name = \\\"Compound Governor Alpha\\\";\\n\\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n    function quorumVotes() public pure returns (uint) { return 400000e18; } // 400,000 = 4% of Comp\\n\\n    /// @notice The number of votes required in order for a voter to become a proposer\\n    function proposalThreshold() public pure returns (uint) { return 100000e18; } // 100,000 = 1% of Comp\\n\\n    /// @notice The maximum number of actions that can be included in a proposal\\n    function proposalMaxOperations() public pure returns (uint) { return 10; } // 10 actions\\n\\n    /// @notice The delay before voting on a proposal may take place, once proposed\\n    function votingDelay() public pure returns (uint) { return 1; } // 1 block\\n\\n    /// @notice The duration of voting on a proposal, in blocks\\n    function votingPeriod() virtual public pure returns (uint) { return 17280; } // ~3 days in blocks (assuming 15s blocks)\\n\\n    /// @notice The address of the Compound Protocol Timelock\\n    TimelockInterface public timelock;\\n\\n    /// @notice The address of the Compound governance token\\n    CompInterface public comp;\\n\\n    /// @notice The address of the Governor Guardian\\n    address public guardian;\\n\\n    /// @notice The total number of proposals\\n    uint public proposalCount = 1;\\n\\n    struct Proposal {\\n        /// @notice Unique id for looking up a proposal\\n        uint id;\\n\\n        /// @notice Creator of the proposal\\n        address proposer;\\n\\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint eta;\\n\\n        /// @notice the ordered list of target addresses for calls to be made\\n        address[] targets;\\n\\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n        uint[] values;\\n\\n        /// @notice The ordered list of function signatures to be called\\n        string[] signatures;\\n\\n        /// @notice The ordered list of calldata to be passed to each call\\n        bytes[] calldatas;\\n\\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\\n        uint startBlock;\\n\\n        /// @notice The block at which voting ends: votes must be cast prior to this block\\n        uint endBlock;\\n\\n        /// @notice Current number of votes in favor of this proposal\\n        uint forVotes;\\n\\n        /// @notice Current number of votes in opposition to this proposal\\n        uint againstVotes;\\n\\n        /// @notice Flag marking whether the proposal has been canceled\\n        bool canceled;\\n\\n        /// @notice Flag marking whether the proposal has been executed\\n        bool executed;\\n\\n        /// @notice Receipts of ballots for the entire set of voters\\n        mapping (address => Receipt) receipts;\\n    }\\n\\n    /// @notice Ballot receipt record for a voter\\n    struct Receipt {\\n        /// @notice Whether or not a vote has been cast\\n        bool hasVoted;\\n\\n        /// @notice Whether or not the voter supports the proposal\\n        bool support;\\n\\n        /// @notice The number of votes the voter had, which were cast\\n        uint96 votes;\\n    }\\n\\n    /// @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Defeated,\\n        Succeeded,\\n        Queued,\\n        Expired,\\n        Executed\\n    }\\n\\n    /// @notice The official record of all proposals ever proposed\\n    mapping (uint => Proposal) public proposals;\\n\\n    /// @notice The latest proposal for each proposer\\n    mapping (address => uint) public latestProposalIds;\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\");\\n\\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\\\"Ballot(uint256 proposalId,bool support)\\\");\\n\\n    /// @notice An event emitted when a new proposal is created\\n    event ProposalCreated(uint id, address proposer, address[] targets, uint[] values, string[] signatures, bytes[] calldatas, uint startBlock, uint endBlock, string description);\\n\\n    /// @notice An event emitted when a vote has been cast on a proposal\\n    event VoteCast(address voter, uint proposalId, bool support, uint votes);\\n\\n    /// @notice An event emitted when a proposal has been canceled\\n    event ProposalCanceled(uint id);\\n\\n    /// @notice An event emitted when a proposal has been queued in the Timelock\\n    event ProposalQueued(uint id, uint eta);\\n\\n    /// @notice An event emitted when a proposal has been executed in the Timelock\\n    event ProposalExecuted(uint id);\\n\\n    constructor(address timelock_, address comp_, address guardian_) public {\\n        timelock = TimelockInterface(timelock_);\\n        comp = CompInterface(comp_);\\n        guardian = guardian_;\\n    }\\n\\n    function propose(address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas, string memory description) public returns (uint) {\\n        require(comp.getPriorVotes(msg.sender, sub256(block.number, 1)) > proposalThreshold(), \\\"GovernorAlpha::propose: proposer votes below proposal threshold\\\");\\n        require(targets.length == values.length && targets.length == signatures.length && targets.length == calldatas.length, \\\"GovernorAlpha::propose: proposal function information arity mismatch\\\");\\n        require(targets.length != 0, \\\"GovernorAlpha::propose: must provide actions\\\");\\n        require(targets.length <= proposalMaxOperations(), \\\"GovernorAlpha::propose: too many actions\\\");\\n\\n        uint latestProposalId = latestProposalIds[msg.sender];\\n        if (latestProposalId != 0) {\\n          ProposalState proposersLatestProposalState = state(latestProposalId);\\n          require(proposersLatestProposalState != ProposalState.Active, \\\"GovernorAlpha::propose: one live proposal per proposer, found an already active proposal\\\");\\n          require(proposersLatestProposalState != ProposalState.Pending, \\\"GovernorAlpha::propose: one live proposal per proposer, found an already pending proposal\\\");\\n        }\\n\\n        uint startBlock = add256(block.number, votingDelay());\\n        uint endBlock = add256(startBlock, votingPeriod());\\n\\n        proposalCount++;\\n        uint proposalId = proposalCount;\\n        Proposal storage newProposal = proposals[proposalId];\\n        // This should never happen but add a check in case.\\n        require(newProposal.id == 0, \\\"GovernorAlpha::propose: ProposalID collsion\\\");\\n        newProposal.id = proposalId;\\n        newProposal.proposer = msg.sender;\\n        newProposal.eta = 0;\\n        newProposal.targets = targets;\\n        newProposal.values = values;\\n        newProposal.signatures = signatures;\\n        newProposal.calldatas = calldatas;\\n        newProposal.startBlock = startBlock;\\n        newProposal.endBlock = endBlock;\\n        newProposal.forVotes = 0;\\n        newProposal.againstVotes = 0;\\n        newProposal.canceled = false;\\n        newProposal.executed = false;\\n\\n        latestProposalIds[newProposal.proposer] = newProposal.id;\\n\\n        emit ProposalCreated(newProposal.id, msg.sender, targets, values, signatures, calldatas, startBlock, endBlock, description);\\n        return newProposal.id;\\n    }\\n\\n    function queue(uint proposalId) public {\\n        require(state(proposalId) == ProposalState.Succeeded, \\\"GovernorAlpha::queue: proposal can only be queued if it is succeeded\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        uint eta = add256(block.timestamp, timelock.delay());\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            _queueOrRevert(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], eta);\\n        }\\n        proposal.eta = eta;\\n        emit ProposalQueued(proposalId, eta);\\n    }\\n\\n    function _queueOrRevert(address target, uint value, string memory signature, bytes memory data, uint eta) internal {\\n        require(!timelock.queuedTransactions(keccak256(abi.encode(target, value, signature, data, eta))), \\\"GovernorAlpha::_queueOrRevert: proposal action already queued at eta\\\");\\n        timelock.queueTransaction(target, value, signature, data, eta);\\n    }\\n\\n    function execute(uint proposalId) public payable {\\n        require(state(proposalId) == ProposalState.Queued, \\\"GovernorAlpha::execute: proposal can only be executed if it is queued\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        proposal.executed = true;\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            timelock.executeTransaction{value: proposal.values[i]}(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\\n        }\\n        emit ProposalExecuted(proposalId);\\n    }\\n\\n    function cancel(uint proposalId) public {\\n        ProposalState state = state(proposalId);\\n        require(state != ProposalState.Executed, \\\"GovernorAlpha::cancel: cannot cancel executed proposal\\\");\\n\\n        Proposal storage proposal = proposals[proposalId];\\n        require(msg.sender == guardian || comp.getPriorVotes(proposal.proposer, sub256(block.number, 1)) < proposalThreshold(), \\\"GovernorAlpha::cancel: proposer above threshold\\\");\\n\\n        proposal.canceled = true;\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            timelock.cancelTransaction(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\\n        }\\n\\n        emit ProposalCanceled(proposalId);\\n    }\\n\\n    function getActions(uint proposalId) public view returns (address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas) {\\n        Proposal storage p = proposals[proposalId];\\n        return (p.targets, p.values, p.signatures, p.calldatas);\\n    }\\n\\n    function getReceipt(uint proposalId, address voter) public view returns (Receipt memory) {\\n        return proposals[proposalId].receipts[voter];\\n    }\\n\\n    function state(uint proposalId) public view returns (ProposalState) {\\n        require(proposalCount >= proposalId && proposalId > 0, \\\"GovernorAlpha::state: invalid proposal id\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        if (proposal.canceled) {\\n            return ProposalState.Canceled;\\n        } else if (block.number <= proposal.startBlock) {\\n            return ProposalState.Pending;\\n        } else if (block.number <= proposal.endBlock) {\\n            return ProposalState.Active;\\n        } else if (proposal.forVotes <= proposal.againstVotes || proposal.forVotes < quorumVotes()) {\\n            return ProposalState.Defeated;\\n        } else if (proposal.eta == 0) {\\n            return ProposalState.Succeeded;\\n        } else if (proposal.executed) {\\n            return ProposalState.Executed;\\n        } else if (block.timestamp >= add256(proposal.eta, timelock.GRACE_PERIOD())) {\\n            return ProposalState.Expired;\\n        } else {\\n            return ProposalState.Queued;\\n        }\\n    }\\n\\n    function castVote(uint proposalId, bool support) public {\\n        return _castVote(msg.sender, proposalId, support);\\n    }\\n\\n    function castVoteBySig(uint proposalId, bool support, uint8 v, bytes32 r, bytes32 s) public {\\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)));\\n        bytes32 structHash = keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\\n        bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(signatory != address(0), \\\"GovernorAlpha::castVoteBySig: invalid signature\\\");\\n        return _castVote(signatory, proposalId, support);\\n    }\\n\\n    function _castVote(address voter, uint proposalId, bool support) internal {\\n        require(state(proposalId) == ProposalState.Active, \\\"GovernorAlpha::_castVote: voting is closed\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        Receipt storage receipt = proposal.receipts[voter];\\n        require(receipt.hasVoted == false, \\\"GovernorAlpha::_castVote: voter already voted\\\");\\n        uint96 votes = comp.getPriorVotes(voter, proposal.startBlock);\\n\\n        if (support) {\\n            proposal.forVotes = add256(proposal.forVotes, votes);\\n        } else {\\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\\n        }\\n\\n        receipt.hasVoted = true;\\n        receipt.support = support;\\n        receipt.votes = votes;\\n\\n        emit VoteCast(voter, proposalId, support, votes);\\n    }\\n\\n    function __acceptAdmin() public {\\n        require(msg.sender == guardian, \\\"GovernorAlpha::__acceptAdmin: sender must be gov guardian\\\");\\n        timelock.acceptAdmin();\\n    }\\n\\n    function __abdicate() public {\\n        require(msg.sender == guardian, \\\"GovernorAlpha::__abdicate: sender must be gov guardian\\\");\\n        guardian = address(0);\\n    }\\n\\n    function __queueSetTimelockPendingAdmin(address newPendingAdmin, uint eta) public {\\n        require(msg.sender == guardian, \\\"GovernorAlpha::__queueSetTimelockPendingAdmin: sender must be gov guardian\\\");\\n        timelock.queueTransaction(address(timelock), 0, \\\"setPendingAdmin(address)\\\", abi.encode(newPendingAdmin), eta);\\n    }\\n\\n    function __executeSetTimelockPendingAdmin(address newPendingAdmin, uint eta) public {\\n        require(msg.sender == guardian, \\\"GovernorAlpha::__executeSetTimelockPendingAdmin: sender must be gov guardian\\\");\\n        timelock.executeTransaction(address(timelock), 0, \\\"setPendingAdmin(address)\\\", abi.encode(newPendingAdmin), eta);\\n    }\\n\\n    function add256(uint256 a, uint256 b) internal pure returns (uint) {\\n        uint c = a + b;\\n        require(c >= a, \\\"addition overflow\\\");\\n        return c;\\n    }\\n\\n    function sub256(uint256 a, uint256 b) internal pure returns (uint) {\\n        require(b <= a, \\\"subtraction underflow\\\");\\n        return a - b;\\n    }\\n\\n    function getChainId() internal view returns (uint) {\\n        uint chainId;\\n        assembly { chainId := chainid() }\\n        return chainId;\\n    }\\n}\\n\\ninterface TimelockInterface {\\n    function delay() external view returns (uint);\\n    function GRACE_PERIOD() external view returns (uint);\\n    function acceptAdmin() external;\\n    function queuedTransactions(bytes32 hash) external view returns (bool);\\n    function queueTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external returns (bytes32);\\n    function cancelTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external;\\n    function executeTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external payable returns (bytes memory);\\n}\\n\\ninterface CompInterface {\\n    function getPriorVotes(address account, uint blockNumber) external view returns (uint96);\\n}\\n\",\"keccak256\":\"0xcf4d6d67227090ceedcf60af8ecead4c22594d3f677f970d1ae5c91448338162\",\"license\":\"BSD-3-Clause\"}},\"version\":1}",
  "bytecode": "0x608060405260016003553480156200001657600080fd5b50604051620031f1380380620031f1833981016040819052620000399162000099565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000e3565b80516001600160a01b03811681146200009457600080fd5b919050565b600080600060608486031215620000af57600080fd5b620000ba846200007c565b9250620000ca602085016200007c565b9150620000da604085016200007c565b90509250925092565b6130fe80620000f36000396000f3fe60806040526004361061019c5760003560e01c8063452a9320116100ec578063d33219b41161008a578063ddf0b00911610064578063ddf0b00914610573578063deaaa7cc14610593578063e23a9a52146105c7578063fe0d94c11461069257600080fd5b8063d33219b41461051d578063da35c6641461053d578063da95691a1461055357600080fd5b80637bdbe4d0116100c65780637bdbe4d0146104b757806391500671146104cb578063b58131b0146104eb578063b9a619611461050857600080fd5b8063452a9320146104625780634634c61f14610482578063760fbc13146104a257600080fd5b806320606b7011610159578063328dd98211610133578063328dd982146103d15780633932abb1146104015780633e4f49e61461041557806340e58ee51461044257600080fd5b806320606b701461036057806321f43e421461039457806324bc1a64146103b457600080fd5b8063013cf08b146101a157806302a251a31461026a57806306fdde0314610289578063109d0af8146102d957806315373e3d1461031157806317977c6114610333575b600080fd5b3480156101ad57600080fd5b506102156101bc36600461267a565b6004602052600090815260409020805460018201546002830154600784015460088501546009860154600a870154600b9097015495966001600160a01b0390951695939492939192909160ff8082169161010090041689565b60408051998a526001600160a01b0390981660208a0152968801959095526060870193909352608086019190915260a085015260c0840152151560e08301521515610100820152610120015b60405180910390f35b34801561027657600080fd5b506143805b604051908152602001610261565b34801561029557600080fd5b506102cc60405180604001604052806017815260200176436f6d706f756e6420476f7665726e6f7220416c70686160481b81525081565b60405161026191906126eb565b3480156102e557600080fd5b506001546102f9906001600160a01b031681565b6040516001600160a01b039091168152602001610261565b34801561031d57600080fd5b5061033161032c36600461270c565b6106a5565b005b34801561033f57600080fd5b5061027b61034e366004612758565b60056020526000908152604090205481565b34801561036c57600080fd5b5061027b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b3480156103a057600080fd5b506103316103af366004612773565b6106b4565b3480156103c057600080fd5b506954b40b1f852bda00000061027b565b3480156103dd57600080fd5b506103f16103ec36600461267a565b6107ee565b6040516102619493929190612863565b34801561040d57600080fd5b50600161027b565b34801561042157600080fd5b5061043561043036600461267a565b610a7f565b60405161026191906128d1565b34801561044e57600080fd5b5061033161045d36600461267a565b610c3c565b34801561046e57600080fd5b506002546102f9906001600160a01b031681565b34801561048e57600080fd5b5061033161049d3660046128f9565b610f60565b3480156104ae57600080fd5b50610331611177565b3480156104c357600080fd5b50600a61027b565b3480156104d757600080fd5b506103316104e6366004612773565b611202565b3480156104f757600080fd5b5069152d02c7e14af680000061027b565b34801561051457600080fd5b5061033161132c565b34801561052957600080fd5b506000546102f9906001600160a01b031681565b34801561054957600080fd5b5061027b60035481565b34801561055f57600080fd5b5061027b61056e366004612c1f565b611407565b34801561057f57600080fd5b5061033161058e36600461267a565b611a21565b34801561059f57600080fd5b5061027b7f8e25870c07e0b0b3884c78da52790939a455c275406c44ae8b434b692fb916ee81565b3480156105d357600080fd5b506106636105e2366004612cf1565b60408051606081018252600080825260208201819052918101919091525060009182526004602090815260408084206001600160a01b03939093168452600c9092018152918190208151606081018352905460ff80821615158352610100820416151593820193909352620100009092046001600160601b03169082015290565b60408051825115158152602080840151151590820152918101516001600160601b031690820152606001610261565b6103316106a036600461267a565b611d20565b6106b0338383611f64565b5050565b6002546001600160a01b0316331461074e5760405162461bcd60e51b815260206004820152604c60248201527f476f7665726e6f72416c7068613a3a5f5f6578656375746553657454696d656c60448201527f6f636b50656e64696e6741646d696e3a2073656e646572206d7573742062652060648201526b33b7bb1033bab0b93234b0b760a11b608482015260a4015b60405180910390fd5b60008054604080516001600160a01b03868116602083015290921692630825f38f92849201604051602081830303815290604052856040518563ffffffff1660e01b81526004016107a29493929190612d1d565b6000604051808303816000875af11580156107c1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107e99190810190612d89565b505050565b6060806060806000600460008781526020019081526020016000209050806003018160040182600501836006018380548060200260200160405190810160405280929190818152602001828054801561087057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610852575b50505050509350828054806020026020016040519081016040528092919081815260200182805480156108c257602002820191906000526020600020905b8154815260200190600101908083116108ae575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b8282101561099657838290600052602060002001805461090990612e00565b80601f016020809104026020016040519081016040528092919081815260200182805461093590612e00565b80156109825780601f1061095757610100808354040283529160200191610982565b820191906000526020600020905b81548152906001019060200180831161096557829003601f168201915b5050505050815260200190600101906108ea565b50505050915080805480602002602001604051908101604052809291908181526020016000905b82821015610a695783829060005260206000200180546109dc90612e00565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0890612e00565b8015610a555780601f10610a2a57610100808354040283529160200191610a55565b820191906000526020600020905b815481529060010190602001808311610a3857829003601f168201915b5050505050815260200190600101906109bd565b5050505090509450945094509450509193509193565b60008160035410158015610a935750600082115b610af15760405162461bcd60e51b815260206004820152602960248201527f476f7665726e6f72416c7068613a3a73746174653a20696e76616c69642070726044820152681bdc1bdcd85b081a5960ba1b6064820152608401610745565b6000828152600460205260409020600b81015460ff1615610b155750600292915050565b80600701544311610b295750600092915050565b80600801544311610b3d5750600192915050565b80600a01548160090154111580610b6157506954b40b1f852bda0000008160090154105b15610b6f5750600392915050565b6002810154610b815750600492915050565b600b810154610100900460ff1615610b9c5750600792915050565b610c1e816002015460008054906101000a90046001600160a01b03166001600160a01b031663c1a287e26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bf5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c199190612e35565b6121d4565b4210610c2d5750600692915050565b50600592915050565b50919050565b6000610c4782610a7f565b90506007816007811115610c5d57610c5d6128bb565b1415610cca5760405162461bcd60e51b815260206004820152603660248201527f476f7665726e6f72416c7068613a3a63616e63656c3a2063616e6e6f742063616044820152751b98d95b08195e1958dd5d1959081c1c9bdc1bdcd85b60521b6064820152608401610745565b60008281526004602052604090206002546001600160a01b0316331480610d975750600180548282015469152d02c7e14af6800000926001600160a01b039283169263782d6fe1921690610d1f90439061222e565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa158015610d68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8c9190612e4e565b6001600160601b0316105b610dfb5760405162461bcd60e51b815260206004820152602f60248201527f476f7665726e6f72416c7068613a3a63616e63656c3a2070726f706f7365722060448201526e18589bdd99481d1a1c995cda1bdb19608a1b6064820152608401610745565b600b8101805460ff1916600117905560005b6003820154811015610f26576000546003830180546001600160a01b039092169163591fcdfe919084908110610e4557610e45612e77565b6000918252602090912001546004850180546001600160a01b039092169185908110610e7357610e73612e77565b9060005260206000200154856005018581548110610e9357610e93612e77565b90600052602060002001866006018681548110610eb257610eb2612e77565b9060005260206000200187600201546040518663ffffffff1660e01b8152600401610ee1959493929190612f2e565b600060405180830381600087803b158015610efb57600080fd5b505af1158015610f0f573d6000803e3d6000fd5b505050508080610f1e90612f90565b915050610e0d565b506040518381527f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c906020015b60405180910390a1505050565b6040805180820182526017815276436f6d706f756e6420476f7665726e6f7220416c70686160481b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527ff5eb22c2e7100465020c98b00537528808db4fec6eb24c550685a92742247bc581840152466060820152306080808301919091528351808303909101815260a0820184528051908301207f8e25870c07e0b0b3884c78da52790939a455c275406c44ae8b434b692fb916ee60c083015260e08201899052871515610100808401919091528451808403909101815261012083019094528351939092019290922061190160f01b6101408401526101428301829052610162830181905290916000906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa1580156110e6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166111615760405162461bcd60e51b815260206004820152602f60248201527f476f7665726e6f72416c7068613a3a63617374566f746542795369673a20696e60448201526e76616c6964207369676e617475726560881b6064820152608401610745565b61116c818a8a611f64565b505050505050505050565b6002546001600160a01b031633146111f05760405162461bcd60e51b815260206004820152603660248201527f476f7665726e6f72416c7068613a3a5f5f61626469636174653a2073656e6465604482015275391036bab9ba1031329033b7bb1033bab0b93234b0b760511b6064820152608401610745565b600280546001600160a01b0319169055565b6002546001600160a01b031633146112955760405162461bcd60e51b815260206004820152604a60248201527f476f7665726e6f72416c7068613a3a5f5f717565756553657454696d656c6f6360448201527f6b50656e64696e6741646d696e3a2073656e646572206d75737420626520676f6064820152693b1033bab0b93234b0b760b11b608482015260a401610745565b60008054604080516001600160a01b03868116602083015290921692633a66f90192849201604051602081830303815290604052856040518563ffffffff1660e01b81526004016112e99493929190612d1d565b6020604051808303816000875af1158015611308573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e99190612e35565b6002546001600160a01b031633146113ac5760405162461bcd60e51b815260206004820152603960248201527f476f7665726e6f72416c7068613a3a5f5f61636365707441646d696e3a20736560448201527f6e646572206d75737420626520676f7620677561726469616e000000000000006064820152608401610745565b6000805460408051630e18b68160e01b815290516001600160a01b0390921692630e18b6819260048084019382900301818387803b1580156113ed57600080fd5b505af1158015611401573d6000803e3d6000fd5b50505050565b600069152d02c7e14af6800000600180546001600160a01b03169063782d6fe190339061143590439061222e565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa15801561147e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a29190612e4e565b6001600160601b03161161151e5760405162461bcd60e51b815260206004820152603f60248201527f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73657260448201527f20766f7465732062656c6f772070726f706f73616c207468726573686f6c64006064820152608401610745565b84518651148015611530575083518651145b801561153d575082518651145b6115bd5760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73616c908201527f2066756e6374696f6e20696e666f726d6174696f6e206172697479206d69736d6064820152630c2e8c6d60e31b608482015260a401610745565b85516116205760405162461bcd60e51b815260206004820152602c60248201527f476f7665726e6f72416c7068613a3a70726f706f73653a206d7573742070726f60448201526b7669646520616374696f6e7360a01b6064820152608401610745565b600a865111156116835760405162461bcd60e51b815260206004820152602860248201527f476f7665726e6f72416c7068613a3a70726f706f73653a20746f6f206d616e7960448201526720616374696f6e7360c01b6064820152608401610745565b3360009081526005602052604090205480156118045760006116a482610a7f565b905060018160078111156116ba576116ba6128bb565b14156117545760405162461bcd60e51b815260206004820152605860248201527f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766560448201527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60648201527f20616c7265616479206163746976652070726f706f73616c0000000000000000608482015260a401610745565b6000816007811115611768576117686128bb565b14156118025760405162461bcd60e51b815260206004820152605960248201527f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766560448201527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60648201527f20616c72656164792070656e64696e672070726f706f73616c00000000000000608482015260a401610745565b505b60006118114360016121d4565b90506000611821826143806121d4565b60038054919250600061183383612f90565b909155505060035460008181526004602052604090208054156118ac5760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e6f72416c7068613a3a70726f706f73653a2050726f706f73616c60448201526a24a21031b7b63639b4b7b760a91b6064820152608401610745565b8181556001810180546001600160a01b03191633179055600060028201558a516118df90600383019060208e0190612429565b5089516118f590600483019060208d019061248e565b50885161190b90600583019060208c01906124c9565b50875161192190600683019060208b0190612522565b5083816007018190555082816008018190555060008160090181905550600081600a0181905550600081600b0160006101000a81548160ff021916908315150217905550600081600b0160016101000a81548160ff0219169083151502179055508060000154600560008360010160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000154338d8d8d8d8a8a8f604051611a0a99989796959493929190612fab565b60405180910390a1549a9950505050505050505050565b6004611a2c82610a7f565b6007811115611a3d57611a3d6128bb565b14611abe5760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e6f72416c7068613a3a71756575653a2070726f706f73616c2063908201527f616e206f6e6c79206265207175657565642069662069742069732073756363656064820152631959195960e21b608482015260a401610745565b600081815260046020818152604080842084548251630d48571f60e31b81529251919594611b189442946001600160a01b0390931693636a42b8f89380840193908290030181865afa158015610bf5573d6000803e3d6000fd5b905060005b6003830154811015611ce257611cd0836003018281548110611b4157611b41612e77565b6000918252602090912001546004850180546001600160a01b039092169184908110611b6f57611b6f612e77565b9060005260206000200154856005018481548110611b8f57611b8f612e77565b906000526020600020018054611ba490612e00565b80601f0160208091040260200160405190810160405280929190818152602001828054611bd090612e00565b8015611c1d5780601f10611bf257610100808354040283529160200191611c1d565b820191906000526020600020905b815481529060010190602001808311611c0057829003601f168201915b5050505050866006018581548110611c3757611c37612e77565b906000526020600020018054611c4c90612e00565b80601f0160208091040260200160405190810160405280929190818152602001828054611c7890612e00565b8015611cc55780601f10611c9a57610100808354040283529160200191611cc5565b820191906000526020600020905b815481529060010190602001808311611ca857829003601f168201915b505050505086612282565b80611cda81612f90565b915050611b1d565b506002820181905560408051848152602081018390527f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda28929101610f53565b6005611d2b82610a7f565b6007811115611d3c57611d3c6128bb565b14611dbd5760405162461bcd60e51b815260206004820152604560248201527f476f7665726e6f72416c7068613a3a657865637574653a2070726f706f73616c60448201527f2063616e206f6e6c7920626520657865637574656420696620697420697320716064820152641d595d595960da1b608482015260a401610745565b6000818152600460205260408120600b8101805461ff001916610100179055905b6003820154811015611f2c576000546004830180546001600160a01b0390921691630825f38f919084908110611e1657611e16612e77565b9060005260206000200154846003018481548110611e3657611e36612e77565b6000918252602090912001546004860180546001600160a01b039092169186908110611e6457611e64612e77565b9060005260206000200154866005018681548110611e8457611e84612e77565b90600052602060002001876006018781548110611ea357611ea3612e77565b9060005260206000200188600201546040518763ffffffff1660e01b8152600401611ed2959493929190612f2e565b60006040518083038185885af1158015611ef0573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052611f199190810190612d89565b5080611f2481612f90565b915050611dde565b506040518281527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f9060200160405180910390a15050565b6001611f6f83610a7f565b6007811115611f8057611f806128bb565b14611fe05760405162461bcd60e51b815260206004820152602a60248201527f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f74696e67604482015269081a5cc818db1bdcd95960b21b6064820152608401610745565b60008281526004602090815260408083206001600160a01b0387168452600c8101909252909120805460ff161561206f5760405162461bcd60e51b815260206004820152602d60248201527f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f7465722060448201526c185b1c9958591e481d9bdd1959609a1b6064820152608401610745565b600154600783015460405163782d6fe160e01b81526000926001600160a01b03169163782d6fe1916120b9918a916004016001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156120d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120fa9190612e4e565b90508315612123576121198360090154826001600160601b03166121d4565b6009840155612140565b61213a83600a0154826001600160601b03166121d4565b600a8401555b81546001600160601b0382166201000081026dffffffffffffffffffffffff000019871515610100810261ffff199095169490941760011716178455604080516001600160a01b038a168152602081018990529081019290925260608201527f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c469060800160405180910390a1505050505050565b6000806121e18385613043565b9050838110156122275760405162461bcd60e51b81526020600482015260116024820152706164646974696f6e206f766572666c6f7760781b6044820152606401610745565b9392505050565b6000828211156122785760405162461bcd60e51b81526020600482015260156024820152747375627472616374696f6e20756e646572666c6f7760581b6044820152606401610745565b612227828461305b565b6000546040516001600160a01b039091169063f2b06537906122b09088908890889088908890602001613072565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016122e491815260200190565b602060405180830381865afa158015612301573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061232591906130ab565b156123a65760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e6f72416c7068613a3a5f71756575654f725265766572743a2070908201527f726f706f73616c20616374696f6e20616c7265616479207175657565642061746064820152632065746160e01b608482015260a401610745565b600054604051633a66f90160e01b81526001600160a01b0390911690633a66f901906123de9088908890889088908890600401613072565b6020604051808303816000875af11580156123fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124219190612e35565b505050505050565b82805482825590600052602060002090810192821561247e579160200282015b8281111561247e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612449565b5061248a92915061257b565b5090565b82805482825590600052602060002090810192821561247e579160200282015b8281111561247e5782518255916020019190600101906124ae565b828054828255906000526020600020908101928215612516579160200282015b828111156125165782518051612506918491602090910190612590565b50916020019190600101906124e9565b5061248a929150612603565b82805482825590600052602060002090810192821561256f579160200282015b8281111561256f578251805161255f918491602090910190612590565b5091602001919060010190612542565b5061248a929150612620565b5b8082111561248a576000815560010161257c565b82805461259c90612e00565b90600052602060002090601f0160209004810192826125be576000855561247e565b82601f106125d757805160ff191683800117855561247e565b8280016001018555821561247e579182018281111561247e5782518255916020019190600101906124ae565b8082111561248a576000612617828261263d565b50600101612603565b8082111561248a576000612634828261263d565b50600101612620565b50805461264990612e00565b6000825580601f10612659575050565b601f016020900490600052602060002090810190612677919061257b565b50565b60006020828403121561268c57600080fd5b5035919050565b60005b838110156126ae578181015183820152602001612696565b838111156114015750506000910152565b600081518084526126d7816020860160208601612693565b601f01601f19169290920160200192915050565b60208152600061222760208301846126bf565b801515811461267757600080fd5b6000806040838503121561271f57600080fd5b823591506020830135612731816126fe565b809150509250929050565b80356001600160a01b038116811461275357600080fd5b919050565b60006020828403121561276a57600080fd5b6122278261273c565b6000806040838503121561278657600080fd5b61278f8361273c565b946020939093013593505050565b600081518084526020808501945080840160005b838110156127d65781516001600160a01b0316875295820195908201906001016127b1565b509495945050505050565b600081518084526020808501945080840160005b838110156127d6578151875295820195908201906001016127f5565b6000815180845260208085019450848260051b860182860160005b858110156128565783830389526128448383516126bf565b9885019892509084019060010161282c565b5090979650505050505050565b608081526000612876608083018761279d565b828103602084015261288881876127e1565b9050828103604084015261289c8186612811565b905082810360608401526128b08185612811565b979650505050505050565b634e487b7160e01b600052602160045260246000fd5b60208101600883106128f357634e487b7160e01b600052602160045260246000fd5b91905290565b600080600080600060a0868803121561291157600080fd5b853594506020860135612923816126fe565b9350604086013560ff8116811461293957600080fd5b94979396509394606081013594506080013592915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561299057612990612951565b604052919050565b600067ffffffffffffffff8211156129b2576129b2612951565b5060051b60200190565b600082601f8301126129cd57600080fd5b813560206129e26129dd83612998565b612967565b82815260059290921b84018101918181019086841115612a0157600080fd5b8286015b84811015612a2357612a168161273c565b8352918301918301612a05565b509695505050505050565b600082601f830112612a3f57600080fd5b81356020612a4f6129dd83612998565b82815260059290921b84018101918181019086841115612a6e57600080fd5b8286015b84811015612a235780358352918301918301612a72565b600067ffffffffffffffff821115612aa357612aa3612951565b50601f01601f191660200190565b6000612abf6129dd84612a89565b9050828152838383011115612ad357600080fd5b828260208301376000602084830101529392505050565b600082601f830112612afb57600080fd5b61222783833560208501612ab1565b600082601f830112612b1b57600080fd5b81356020612b2b6129dd83612998565b82815260059290921b84018101918181019086841115612b4a57600080fd5b8286015b84811015612a2357803567ffffffffffffffff811115612b6e5760008081fd5b612b7c8986838b0101612aea565b845250918301918301612b4e565b600082601f830112612b9b57600080fd5b81356020612bab6129dd83612998565b82815260059290921b84018101918181019086841115612bca57600080fd5b8286015b84811015612a2357803567ffffffffffffffff811115612bee5760008081fd5b8701603f81018913612c005760008081fd5b612c11898683013560408401612ab1565b845250918301918301612bce565b600080600080600060a08688031215612c3757600080fd5b853567ffffffffffffffff80821115612c4f57600080fd5b612c5b89838a016129bc565b96506020880135915080821115612c7157600080fd5b612c7d89838a01612a2e565b95506040880135915080821115612c9357600080fd5b612c9f89838a01612b0a565b94506060880135915080821115612cb557600080fd5b612cc189838a01612b8a565b93506080880135915080821115612cd757600080fd5b50612ce488828901612aea565b9150509295509295909350565b60008060408385031215612d0457600080fd5b82359150612d146020840161273c565b90509250929050565b60018060a01b038516815283602082015260a06040820152601860a08201527f73657450656e64696e6741646d696e286164647265737329000000000000000060c082015260e060608201526000612d7860e08301856126bf565b905082608083015295945050505050565b600060208284031215612d9b57600080fd5b815167ffffffffffffffff811115612db257600080fd5b8201601f81018413612dc357600080fd5b8051612dd16129dd82612a89565b818152856020838501011115612de657600080fd5b612df7826020830160208601612693565b95945050505050565b600181811c90821680612e1457607f821691505b60208210811415610c3657634e487b7160e01b600052602260045260246000fd5b600060208284031215612e4757600080fd5b5051919050565b600060208284031215612e6057600080fd5b81516001600160601b038116811461222757600080fd5b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c9080831680612ea757607f831692505b6020808410821415612ec957634e487b7160e01b600052602260045260246000fd5b838852818015612ee05760018114612ef457612f22565b60ff19861689830152604089019650612f22565b876000528160002060005b86811015612f1a5781548b8201850152908501908301612eff565b8a0183019750505b50505050505092915050565b60018060a01b038616815284602082015260a060408201526000612f5560a0830186612e8d565b8281036060840152612f678186612e8d565b9150508260808301529695505050505050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415612fa457612fa4612f7a565b5060010190565b8981526001600160a01b038916602082015261012060408201819052600090612fd68382018b61279d565b90508281036060840152612fea818a6127e1565b90508281036080840152612ffe8189612811565b905082810360a08401526130128188612811565b90508560c08401528460e084015282810361010084015261303381856126bf565b9c9b505050505050505050505050565b6000821982111561305657613056612f7a565b500190565b60008282101561306d5761306d612f7a565b500390565b60018060a01b038616815284602082015260a06040820152600061309960a08301866126bf565b8281036060840152612f6781866126bf565b6000602082840312156130bd57600080fd5b8151612227816126fe56fea2646970667358221220a1f670b3cb42f28dcf3f532b1b86ac6117a74b0e044134a89c60b75294faa3d164736f6c634300080a0033",
  "deployedBytecode": "0x60806040526004361061019c5760003560e01c8063452a9320116100ec578063d33219b41161008a578063ddf0b00911610064578063ddf0b00914610573578063deaaa7cc14610593578063e23a9a52146105c7578063fe0d94c11461069257600080fd5b8063d33219b41461051d578063da35c6641461053d578063da95691a1461055357600080fd5b80637bdbe4d0116100c65780637bdbe4d0146104b757806391500671146104cb578063b58131b0146104eb578063b9a619611461050857600080fd5b8063452a9320146104625780634634c61f14610482578063760fbc13146104a257600080fd5b806320606b7011610159578063328dd98211610133578063328dd982146103d15780633932abb1146104015780633e4f49e61461041557806340e58ee51461044257600080fd5b806320606b701461036057806321f43e421461039457806324bc1a64146103b457600080fd5b8063013cf08b146101a157806302a251a31461026a57806306fdde0314610289578063109d0af8146102d957806315373e3d1461031157806317977c6114610333575b600080fd5b3480156101ad57600080fd5b506102156101bc36600461267a565b6004602052600090815260409020805460018201546002830154600784015460088501546009860154600a870154600b9097015495966001600160a01b0390951695939492939192909160ff8082169161010090041689565b60408051998a526001600160a01b0390981660208a0152968801959095526060870193909352608086019190915260a085015260c0840152151560e08301521515610100820152610120015b60405180910390f35b34801561027657600080fd5b506143805b604051908152602001610261565b34801561029557600080fd5b506102cc60405180604001604052806017815260200176436f6d706f756e6420476f7665726e6f7220416c70686160481b81525081565b60405161026191906126eb565b3480156102e557600080fd5b506001546102f9906001600160a01b031681565b6040516001600160a01b039091168152602001610261565b34801561031d57600080fd5b5061033161032c36600461270c565b6106a5565b005b34801561033f57600080fd5b5061027b61034e366004612758565b60056020526000908152604090205481565b34801561036c57600080fd5b5061027b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b3480156103a057600080fd5b506103316103af366004612773565b6106b4565b3480156103c057600080fd5b506954b40b1f852bda00000061027b565b3480156103dd57600080fd5b506103f16103ec36600461267a565b6107ee565b6040516102619493929190612863565b34801561040d57600080fd5b50600161027b565b34801561042157600080fd5b5061043561043036600461267a565b610a7f565b60405161026191906128d1565b34801561044e57600080fd5b5061033161045d36600461267a565b610c3c565b34801561046e57600080fd5b506002546102f9906001600160a01b031681565b34801561048e57600080fd5b5061033161049d3660046128f9565b610f60565b3480156104ae57600080fd5b50610331611177565b3480156104c357600080fd5b50600a61027b565b3480156104d757600080fd5b506103316104e6366004612773565b611202565b3480156104f757600080fd5b5069152d02c7e14af680000061027b565b34801561051457600080fd5b5061033161132c565b34801561052957600080fd5b506000546102f9906001600160a01b031681565b34801561054957600080fd5b5061027b60035481565b34801561055f57600080fd5b5061027b61056e366004612c1f565b611407565b34801561057f57600080fd5b5061033161058e36600461267a565b611a21565b34801561059f57600080fd5b5061027b7f8e25870c07e0b0b3884c78da52790939a455c275406c44ae8b434b692fb916ee81565b3480156105d357600080fd5b506106636105e2366004612cf1565b60408051606081018252600080825260208201819052918101919091525060009182526004602090815260408084206001600160a01b03939093168452600c9092018152918190208151606081018352905460ff80821615158352610100820416151593820193909352620100009092046001600160601b03169082015290565b60408051825115158152602080840151151590820152918101516001600160601b031690820152606001610261565b6103316106a036600461267a565b611d20565b6106b0338383611f64565b5050565b6002546001600160a01b0316331461074e5760405162461bcd60e51b815260206004820152604c60248201527f476f7665726e6f72416c7068613a3a5f5f6578656375746553657454696d656c60448201527f6f636b50656e64696e6741646d696e3a2073656e646572206d7573742062652060648201526b33b7bb1033bab0b93234b0b760a11b608482015260a4015b60405180910390fd5b60008054604080516001600160a01b03868116602083015290921692630825f38f92849201604051602081830303815290604052856040518563ffffffff1660e01b81526004016107a29493929190612d1d565b6000604051808303816000875af11580156107c1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107e99190810190612d89565b505050565b6060806060806000600460008781526020019081526020016000209050806003018160040182600501836006018380548060200260200160405190810160405280929190818152602001828054801561087057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610852575b50505050509350828054806020026020016040519081016040528092919081815260200182805480156108c257602002820191906000526020600020905b8154815260200190600101908083116108ae575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b8282101561099657838290600052602060002001805461090990612e00565b80601f016020809104026020016040519081016040528092919081815260200182805461093590612e00565b80156109825780601f1061095757610100808354040283529160200191610982565b820191906000526020600020905b81548152906001019060200180831161096557829003601f168201915b5050505050815260200190600101906108ea565b50505050915080805480602002602001604051908101604052809291908181526020016000905b82821015610a695783829060005260206000200180546109dc90612e00565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0890612e00565b8015610a555780601f10610a2a57610100808354040283529160200191610a55565b820191906000526020600020905b815481529060010190602001808311610a3857829003601f168201915b5050505050815260200190600101906109bd565b5050505090509450945094509450509193509193565b60008160035410158015610a935750600082115b610af15760405162461bcd60e51b815260206004820152602960248201527f476f7665726e6f72416c7068613a3a73746174653a20696e76616c69642070726044820152681bdc1bdcd85b081a5960ba1b6064820152608401610745565b6000828152600460205260409020600b81015460ff1615610b155750600292915050565b80600701544311610b295750600092915050565b80600801544311610b3d5750600192915050565b80600a01548160090154111580610b6157506954b40b1f852bda0000008160090154105b15610b6f5750600392915050565b6002810154610b815750600492915050565b600b810154610100900460ff1615610b9c5750600792915050565b610c1e816002015460008054906101000a90046001600160a01b03166001600160a01b031663c1a287e26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bf5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c199190612e35565b6121d4565b4210610c2d5750600692915050565b50600592915050565b50919050565b6000610c4782610a7f565b90506007816007811115610c5d57610c5d6128bb565b1415610cca5760405162461bcd60e51b815260206004820152603660248201527f476f7665726e6f72416c7068613a3a63616e63656c3a2063616e6e6f742063616044820152751b98d95b08195e1958dd5d1959081c1c9bdc1bdcd85b60521b6064820152608401610745565b60008281526004602052604090206002546001600160a01b0316331480610d975750600180548282015469152d02c7e14af6800000926001600160a01b039283169263782d6fe1921690610d1f90439061222e565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa158015610d68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8c9190612e4e565b6001600160601b0316105b610dfb5760405162461bcd60e51b815260206004820152602f60248201527f476f7665726e6f72416c7068613a3a63616e63656c3a2070726f706f7365722060448201526e18589bdd99481d1a1c995cda1bdb19608a1b6064820152608401610745565b600b8101805460ff1916600117905560005b6003820154811015610f26576000546003830180546001600160a01b039092169163591fcdfe919084908110610e4557610e45612e77565b6000918252602090912001546004850180546001600160a01b039092169185908110610e7357610e73612e77565b9060005260206000200154856005018581548110610e9357610e93612e77565b90600052602060002001866006018681548110610eb257610eb2612e77565b9060005260206000200187600201546040518663ffffffff1660e01b8152600401610ee1959493929190612f2e565b600060405180830381600087803b158015610efb57600080fd5b505af1158015610f0f573d6000803e3d6000fd5b505050508080610f1e90612f90565b915050610e0d565b506040518381527f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c906020015b60405180910390a1505050565b6040805180820182526017815276436f6d706f756e6420476f7665726e6f7220416c70686160481b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527ff5eb22c2e7100465020c98b00537528808db4fec6eb24c550685a92742247bc581840152466060820152306080808301919091528351808303909101815260a0820184528051908301207f8e25870c07e0b0b3884c78da52790939a455c275406c44ae8b434b692fb916ee60c083015260e08201899052871515610100808401919091528451808403909101815261012083019094528351939092019290922061190160f01b6101408401526101428301829052610162830181905290916000906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa1580156110e6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166111615760405162461bcd60e51b815260206004820152602f60248201527f476f7665726e6f72416c7068613a3a63617374566f746542795369673a20696e60448201526e76616c6964207369676e617475726560881b6064820152608401610745565b61116c818a8a611f64565b505050505050505050565b6002546001600160a01b031633146111f05760405162461bcd60e51b815260206004820152603660248201527f476f7665726e6f72416c7068613a3a5f5f61626469636174653a2073656e6465604482015275391036bab9ba1031329033b7bb1033bab0b93234b0b760511b6064820152608401610745565b600280546001600160a01b0319169055565b6002546001600160a01b031633146112955760405162461bcd60e51b815260206004820152604a60248201527f476f7665726e6f72416c7068613a3a5f5f717565756553657454696d656c6f6360448201527f6b50656e64696e6741646d696e3a2073656e646572206d75737420626520676f6064820152693b1033bab0b93234b0b760b11b608482015260a401610745565b60008054604080516001600160a01b03868116602083015290921692633a66f90192849201604051602081830303815290604052856040518563ffffffff1660e01b81526004016112e99493929190612d1d565b6020604051808303816000875af1158015611308573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e99190612e35565b6002546001600160a01b031633146113ac5760405162461bcd60e51b815260206004820152603960248201527f476f7665726e6f72416c7068613a3a5f5f61636365707441646d696e3a20736560448201527f6e646572206d75737420626520676f7620677561726469616e000000000000006064820152608401610745565b6000805460408051630e18b68160e01b815290516001600160a01b0390921692630e18b6819260048084019382900301818387803b1580156113ed57600080fd5b505af1158015611401573d6000803e3d6000fd5b50505050565b600069152d02c7e14af6800000600180546001600160a01b03169063782d6fe190339061143590439061222e565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa15801561147e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a29190612e4e565b6001600160601b03161161151e5760405162461bcd60e51b815260206004820152603f60248201527f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73657260448201527f20766f7465732062656c6f772070726f706f73616c207468726573686f6c64006064820152608401610745565b84518651148015611530575083518651145b801561153d575082518651145b6115bd5760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73616c908201527f2066756e6374696f6e20696e666f726d6174696f6e206172697479206d69736d6064820152630c2e8c6d60e31b608482015260a401610745565b85516116205760405162461bcd60e51b815260206004820152602c60248201527f476f7665726e6f72416c7068613a3a70726f706f73653a206d7573742070726f60448201526b7669646520616374696f6e7360a01b6064820152608401610745565b600a865111156116835760405162461bcd60e51b815260206004820152602860248201527f476f7665726e6f72416c7068613a3a70726f706f73653a20746f6f206d616e7960448201526720616374696f6e7360c01b6064820152608401610745565b3360009081526005602052604090205480156118045760006116a482610a7f565b905060018160078111156116ba576116ba6128bb565b14156117545760405162461bcd60e51b815260206004820152605860248201527f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766560448201527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60648201527f20616c7265616479206163746976652070726f706f73616c0000000000000000608482015260a401610745565b6000816007811115611768576117686128bb565b14156118025760405162461bcd60e51b815260206004820152605960248201527f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766560448201527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60648201527f20616c72656164792070656e64696e672070726f706f73616c00000000000000608482015260a401610745565b505b60006118114360016121d4565b90506000611821826143806121d4565b60038054919250600061183383612f90565b909155505060035460008181526004602052604090208054156118ac5760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e6f72416c7068613a3a70726f706f73653a2050726f706f73616c60448201526a24a21031b7b63639b4b7b760a91b6064820152608401610745565b8181556001810180546001600160a01b03191633179055600060028201558a516118df90600383019060208e0190612429565b5089516118f590600483019060208d019061248e565b50885161190b90600583019060208c01906124c9565b50875161192190600683019060208b0190612522565b5083816007018190555082816008018190555060008160090181905550600081600a0181905550600081600b0160006101000a81548160ff021916908315150217905550600081600b0160016101000a81548160ff0219169083151502179055508060000154600560008360010160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000154338d8d8d8d8a8a8f604051611a0a99989796959493929190612fab565b60405180910390a1549a9950505050505050505050565b6004611a2c82610a7f565b6007811115611a3d57611a3d6128bb565b14611abe5760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e6f72416c7068613a3a71756575653a2070726f706f73616c2063908201527f616e206f6e6c79206265207175657565642069662069742069732073756363656064820152631959195960e21b608482015260a401610745565b600081815260046020818152604080842084548251630d48571f60e31b81529251919594611b189442946001600160a01b0390931693636a42b8f89380840193908290030181865afa158015610bf5573d6000803e3d6000fd5b905060005b6003830154811015611ce257611cd0836003018281548110611b4157611b41612e77565b6000918252602090912001546004850180546001600160a01b039092169184908110611b6f57611b6f612e77565b9060005260206000200154856005018481548110611b8f57611b8f612e77565b906000526020600020018054611ba490612e00565b80601f0160208091040260200160405190810160405280929190818152602001828054611bd090612e00565b8015611c1d5780601f10611bf257610100808354040283529160200191611c1d565b820191906000526020600020905b815481529060010190602001808311611c0057829003601f168201915b5050505050866006018581548110611c3757611c37612e77565b906000526020600020018054611c4c90612e00565b80601f0160208091040260200160405190810160405280929190818152602001828054611c7890612e00565b8015611cc55780601f10611c9a57610100808354040283529160200191611cc5565b820191906000526020600020905b815481529060010190602001808311611ca857829003601f168201915b505050505086612282565b80611cda81612f90565b915050611b1d565b506002820181905560408051848152602081018390527f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda28929101610f53565b6005611d2b82610a7f565b6007811115611d3c57611d3c6128bb565b14611dbd5760405162461bcd60e51b815260206004820152604560248201527f476f7665726e6f72416c7068613a3a657865637574653a2070726f706f73616c60448201527f2063616e206f6e6c7920626520657865637574656420696620697420697320716064820152641d595d595960da1b608482015260a401610745565b6000818152600460205260408120600b8101805461ff001916610100179055905b6003820154811015611f2c576000546004830180546001600160a01b0390921691630825f38f919084908110611e1657611e16612e77565b9060005260206000200154846003018481548110611e3657611e36612e77565b6000918252602090912001546004860180546001600160a01b039092169186908110611e6457611e64612e77565b9060005260206000200154866005018681548110611e8457611e84612e77565b90600052602060002001876006018781548110611ea357611ea3612e77565b9060005260206000200188600201546040518763ffffffff1660e01b8152600401611ed2959493929190612f2e565b60006040518083038185885af1158015611ef0573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052611f199190810190612d89565b5080611f2481612f90565b915050611dde565b506040518281527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f9060200160405180910390a15050565b6001611f6f83610a7f565b6007811115611f8057611f806128bb565b14611fe05760405162461bcd60e51b815260206004820152602a60248201527f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f74696e67604482015269081a5cc818db1bdcd95960b21b6064820152608401610745565b60008281526004602090815260408083206001600160a01b0387168452600c8101909252909120805460ff161561206f5760405162461bcd60e51b815260206004820152602d60248201527f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f7465722060448201526c185b1c9958591e481d9bdd1959609a1b6064820152608401610745565b600154600783015460405163782d6fe160e01b81526000926001600160a01b03169163782d6fe1916120b9918a916004016001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156120d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120fa9190612e4e565b90508315612123576121198360090154826001600160601b03166121d4565b6009840155612140565b61213a83600a0154826001600160601b03166121d4565b600a8401555b81546001600160601b0382166201000081026dffffffffffffffffffffffff000019871515610100810261ffff199095169490941760011716178455604080516001600160a01b038a168152602081018990529081019290925260608201527f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c469060800160405180910390a1505050505050565b6000806121e18385613043565b9050838110156122275760405162461bcd60e51b81526020600482015260116024820152706164646974696f6e206f766572666c6f7760781b6044820152606401610745565b9392505050565b6000828211156122785760405162461bcd60e51b81526020600482015260156024820152747375627472616374696f6e20756e646572666c6f7760581b6044820152606401610745565b612227828461305b565b6000546040516001600160a01b039091169063f2b06537906122b09088908890889088908890602001613072565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016122e491815260200190565b602060405180830381865afa158015612301573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061232591906130ab565b156123a65760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e6f72416c7068613a3a5f71756575654f725265766572743a2070908201527f726f706f73616c20616374696f6e20616c7265616479207175657565642061746064820152632065746160e01b608482015260a401610745565b600054604051633a66f90160e01b81526001600160a01b0390911690633a66f901906123de9088908890889088908890600401613072565b6020604051808303816000875af11580156123fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124219190612e35565b505050505050565b82805482825590600052602060002090810192821561247e579160200282015b8281111561247e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612449565b5061248a92915061257b565b5090565b82805482825590600052602060002090810192821561247e579160200282015b8281111561247e5782518255916020019190600101906124ae565b828054828255906000526020600020908101928215612516579160200282015b828111156125165782518051612506918491602090910190612590565b50916020019190600101906124e9565b5061248a929150612603565b82805482825590600052602060002090810192821561256f579160200282015b8281111561256f578251805161255f918491602090910190612590565b5091602001919060010190612542565b5061248a929150612620565b5b8082111561248a576000815560010161257c565b82805461259c90612e00565b90600052602060002090601f0160209004810192826125be576000855561247e565b82601f106125d757805160ff191683800117855561247e565b8280016001018555821561247e579182018281111561247e5782518255916020019190600101906124ae565b8082111561248a576000612617828261263d565b50600101612603565b8082111561248a576000612634828261263d565b50600101612620565b50805461264990612e00565b6000825580601f10612659575050565b601f016020900490600052602060002090810190612677919061257b565b50565b60006020828403121561268c57600080fd5b5035919050565b60005b838110156126ae578181015183820152602001612696565b838111156114015750506000910152565b600081518084526126d7816020860160208601612693565b601f01601f19169290920160200192915050565b60208152600061222760208301846126bf565b801515811461267757600080fd5b6000806040838503121561271f57600080fd5b823591506020830135612731816126fe565b809150509250929050565b80356001600160a01b038116811461275357600080fd5b919050565b60006020828403121561276a57600080fd5b6122278261273c565b6000806040838503121561278657600080fd5b61278f8361273c565b946020939093013593505050565b600081518084526020808501945080840160005b838110156127d65781516001600160a01b0316875295820195908201906001016127b1565b509495945050505050565b600081518084526020808501945080840160005b838110156127d6578151875295820195908201906001016127f5565b6000815180845260208085019450848260051b860182860160005b858110156128565783830389526128448383516126bf565b9885019892509084019060010161282c565b5090979650505050505050565b608081526000612876608083018761279d565b828103602084015261288881876127e1565b9050828103604084015261289c8186612811565b905082810360608401526128b08185612811565b979650505050505050565b634e487b7160e01b600052602160045260246000fd5b60208101600883106128f357634e487b7160e01b600052602160045260246000fd5b91905290565b600080600080600060a0868803121561291157600080fd5b853594506020860135612923816126fe565b9350604086013560ff8116811461293957600080fd5b94979396509394606081013594506080013592915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561299057612990612951565b604052919050565b600067ffffffffffffffff8211156129b2576129b2612951565b5060051b60200190565b600082601f8301126129cd57600080fd5b813560206129e26129dd83612998565b612967565b82815260059290921b84018101918181019086841115612a0157600080fd5b8286015b84811015612a2357612a168161273c565b8352918301918301612a05565b509695505050505050565b600082601f830112612a3f57600080fd5b81356020612a4f6129dd83612998565b82815260059290921b84018101918181019086841115612a6e57600080fd5b8286015b84811015612a235780358352918301918301612a72565b600067ffffffffffffffff821115612aa357612aa3612951565b50601f01601f191660200190565b6000612abf6129dd84612a89565b9050828152838383011115612ad357600080fd5b828260208301376000602084830101529392505050565b600082601f830112612afb57600080fd5b61222783833560208501612ab1565b600082601f830112612b1b57600080fd5b81356020612b2b6129dd83612998565b82815260059290921b84018101918181019086841115612b4a57600080fd5b8286015b84811015612a2357803567ffffffffffffffff811115612b6e5760008081fd5b612b7c8986838b0101612aea565b845250918301918301612b4e565b600082601f830112612b9b57600080fd5b81356020612bab6129dd83612998565b82815260059290921b84018101918181019086841115612bca57600080fd5b8286015b84811015612a2357803567ffffffffffffffff811115612bee5760008081fd5b8701603f81018913612c005760008081fd5b612c11898683013560408401612ab1565b845250918301918301612bce565b600080600080600060a08688031215612c3757600080fd5b853567ffffffffffffffff80821115612c4f57600080fd5b612c5b89838a016129bc565b96506020880135915080821115612c7157600080fd5b612c7d89838a01612a2e565b95506040880135915080821115612c9357600080fd5b612c9f89838a01612b0a565b94506060880135915080821115612cb557600080fd5b612cc189838a01612b8a565b93506080880135915080821115612cd757600080fd5b50612ce488828901612aea565b9150509295509295909350565b60008060408385031215612d0457600080fd5b82359150612d146020840161273c565b90509250929050565b60018060a01b038516815283602082015260a06040820152601860a08201527f73657450656e64696e6741646d696e286164647265737329000000000000000060c082015260e060608201526000612d7860e08301856126bf565b905082608083015295945050505050565b600060208284031215612d9b57600080fd5b815167ffffffffffffffff811115612db257600080fd5b8201601f81018413612dc357600080fd5b8051612dd16129dd82612a89565b818152856020838501011115612de657600080fd5b612df7826020830160208601612693565b95945050505050565b600181811c90821680612e1457607f821691505b60208210811415610c3657634e487b7160e01b600052602260045260246000fd5b600060208284031215612e4757600080fd5b5051919050565b600060208284031215612e6057600080fd5b81516001600160601b038116811461222757600080fd5b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c9080831680612ea757607f831692505b6020808410821415612ec957634e487b7160e01b600052602260045260246000fd5b838852818015612ee05760018114612ef457612f22565b60ff19861689830152604089019650612f22565b876000528160002060005b86811015612f1a5781548b8201850152908501908301612eff565b8a0183019750505b50505050505092915050565b60018060a01b038616815284602082015260a060408201526000612f5560a0830186612e8d565b8281036060840152612f678186612e8d565b9150508260808301529695505050505050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415612fa457612fa4612f7a565b5060010190565b8981526001600160a01b038916602082015261012060408201819052600090612fd68382018b61279d565b90508281036060840152612fea818a6127e1565b90508281036080840152612ffe8189612811565b905082810360a08401526130128188612811565b90508560c08401528460e084015282810361010084015261303381856126bf565b9c9b505050505050505050505050565b6000821982111561305657613056612f7a565b500190565b60008282101561306d5761306d612f7a565b500390565b60018060a01b038616815284602082015260a06040820152600061309960a08301866126bf565b8281036060840152612f6781866126bf565b6000602082840312156130bd57600080fd5b8151612227816126fe56fea2646970667358221220a1f670b3cb42f28dcf3f532b1b86ac6117a74b0e044134a89c60b75294faa3d164736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "events": {
      "ProposalCanceled(uint256)": {
        "notice": "An event emitted when a proposal has been canceled"
      },
      "ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)": {
        "notice": "An event emitted when a new proposal is created"
      },
      "ProposalExecuted(uint256)": {
        "notice": "An event emitted when a proposal has been executed in the Timelock"
      },
      "ProposalQueued(uint256,uint256)": {
        "notice": "An event emitted when a proposal has been queued in the Timelock"
      },
      "VoteCast(address,uint256,bool,uint256)": {
        "notice": "An event emitted when a vote has been cast on a proposal"
      }
    },
    "kind": "user",
    "methods": {
      "BALLOT_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the ballot struct used by the contract"
      },
      "DOMAIN_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the contract's domain"
      },
      "comp()": {
        "notice": "The address of the Compound governance token"
      },
      "guardian()": {
        "notice": "The address of the Governor Guardian"
      },
      "latestProposalIds(address)": {
        "notice": "The latest proposal for each proposer"
      },
      "name()": {
        "notice": "The name of this contract"
      },
      "proposalCount()": {
        "notice": "The total number of proposals"
      },
      "proposalMaxOperations()": {
        "notice": "The maximum number of actions that can be included in a proposal"
      },
      "proposalThreshold()": {
        "notice": "The number of votes required in order for a voter to become a proposer"
      },
      "proposals(uint256)": {
        "notice": "The official record of all proposals ever proposed"
      },
      "quorumVotes()": {
        "notice": "The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"
      },
      "timelock()": {
        "notice": "The address of the Compound Protocol Timelock"
      },
      "votingDelay()": {
        "notice": "The delay before voting on a proposal may take place, once proposed"
      },
      "votingPeriod()": {
        "notice": "The duration of voting on a proposal, in blocks"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12231,
        "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
        "label": "timelock",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(TimelockInterface)13537"
      },
      {
        "astId": 12235,
        "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
        "label": "comp",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(CompInterface)13547"
      },
      {
        "astId": 12238,
        "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
        "label": "guardian",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 12242,
        "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
        "label": "proposalCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 12317,
        "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
        "label": "proposals",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Proposal)12292_storage)"
      },
      {
        "astId": 12322,
        "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
        "label": "latestProposalIds",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(CompInterface)13547": {
        "encoding": "inplace",
        "label": "contract CompInterface",
        "numberOfBytes": "20"
      },
      "t_contract(TimelockInterface)13537": {
        "encoding": "inplace",
        "label": "contract TimelockInterface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Receipt)12302_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GovernorAlpha.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)12302_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Proposal)12292_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GovernorAlpha.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)12292_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)12292_storage": {
        "encoding": "inplace",
        "label": "struct GovernorAlpha.Proposal",
        "members": [
          {
            "astId": 12245,
            "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 12248,
            "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 12251,
            "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "eta",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 12255,
            "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "targets",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 12259,
            "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "values",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 12263,
            "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "signatures",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 12267,
            "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "calldatas",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 12270,
            "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "startBlock",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 12273,
            "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "endBlock",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 12276,
            "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "forVotes",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 12279,
            "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "againstVotes",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 12282,
            "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "canceled",
            "offset": 0,
            "slot": "11",
            "type": "t_bool"
          },
          {
            "astId": 12285,
            "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "executed",
            "offset": 1,
            "slot": "11",
            "type": "t_bool"
          },
          {
            "astId": 12291,
            "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "receipts",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_struct(Receipt)12302_storage)"
          }
        ],
        "numberOfBytes": "416"
      },
      "t_struct(Receipt)12302_storage": {
        "encoding": "inplace",
        "label": "struct GovernorAlpha.Receipt",
        "members": [
          {
            "astId": 12295,
            "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 12298,
            "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "support",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 12301,
            "contract": "contracts/Governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "votes",
            "offset": 2,
            "slot": "0",
            "type": "t_uint96"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  }
}